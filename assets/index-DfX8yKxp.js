(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))a(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const r of o.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&a(r)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();function C(e,t,n,a){function i(o){return o instanceof n?o:new n(function(r){r(o)})}return new(n||(n=Promise))(function(o,r){function s(u){try{d(a.next(u))}catch(h){r(h)}}function l(u){try{d(a.throw(u))}catch(h){r(h)}}function d(u){u.done?o(u.value):i(u.value).then(s,l)}d((a=a.apply(e,[])).next())})}function pe(e,t,n,a){if(typeof t=="function"?e!==t||!a:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n==="m"?a:n==="a"?a.call(e):a?a.value:t.get(e)}class m{constructor(t,n,a){this.method=t,this.attribute=n,a!==void 0&&(Array.isArray(a)?this.values=a:this.values=[a])}toString(){return JSON.stringify({method:this.method,attribute:this.attribute,values:this.values})}}m.equal=(e,t)=>new m("equal",e,t).toString();m.notEqual=(e,t)=>new m("notEqual",e,t).toString();m.lessThan=(e,t)=>new m("lessThan",e,t).toString();m.lessThanEqual=(e,t)=>new m("lessThanEqual",e,t).toString();m.greaterThan=(e,t)=>new m("greaterThan",e,t).toString();m.greaterThanEqual=(e,t)=>new m("greaterThanEqual",e,t).toString();m.isNull=e=>new m("isNull",e).toString();m.isNotNull=e=>new m("isNotNull",e).toString();m.between=(e,t,n)=>new m("between",e,[t,n]).toString();m.startsWith=(e,t)=>new m("startsWith",e,t).toString();m.endsWith=(e,t)=>new m("endsWith",e,t).toString();m.select=e=>new m("select",void 0,e).toString();m.search=(e,t)=>new m("search",e,t).toString();m.orderDesc=e=>new m("orderDesc",e).toString();m.orderAsc=e=>new m("orderAsc",e).toString();m.cursorAfter=e=>new m("cursorAfter",void 0,e).toString();m.cursorBefore=e=>new m("cursorBefore",void 0,e).toString();m.limit=e=>new m("limit",void 0,e).toString();m.offset=e=>new m("offset",void 0,e).toString();m.contains=(e,t)=>new m("contains",e,t).toString();m.or=e=>new m("or",void 0,e.map(t=>JSON.parse(t))).toString();m.and=e=>new m("and",void 0,e.map(t=>JSON.parse(t))).toString();class x extends Error{constructor(t,n=0,a="",i=""){super(t),this.name="AppwriteException",this.message=t,this.code=n,this.type=a,this.response=i}}class I{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"17.0.0","X-Appwrite-Response-Format":"1.6.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=window==null?void 0:window.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=window==null?void 0:window.setInterval(()=>{var t;(t=this.realtime.socket)===null||t===void 0||t.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var t,n,a;if(this.realtime.channels.size<1){this.realtime.reconnect=!1,(t=this.realtime.socket)===null||t===void 0||t.close();return}const i=new URLSearchParams;i.set("project",this.config.project),this.realtime.channels.forEach(r=>{i.append("channels[]",r)});const o=this.config.endpointRealtime+"/realtime?"+i.toString();(o!==this.realtime.url||!this.realtime.socket||((n=this.realtime.socket)===null||n===void 0?void 0:n.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&((a=this.realtime.socket)===null||a===void 0?void 0:a.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=o,this.realtime.socket=new WebSocket(o),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",r=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",r=>{var s,l,d;if(!this.realtime.reconnect||((l=(s=this.realtime)===null||s===void 0?void 0:s.lastMessage)===null||l===void 0?void 0:l.type)==="error"&&((d=this.realtime)===null||d===void 0?void 0:d.lastMessage.data).code===1008){this.realtime.reconnect=!0;return}const u=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${u/1e3} seconds.`,r.reason),setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},u)}))},onMessage:t=>{var n,a;try{const i=JSON.parse(t.data);switch(this.realtime.lastMessage=i,i.type){case"connected":const o=JSON.parse((n=window.localStorage.getItem("cookieFallback"))!==null&&n!==void 0?n:"{}"),r=o==null?void 0:o[`a_session_${this.config.project}`],s=i.data;r&&!s.user&&((a=this.realtime.socket)===null||a===void 0||a.send(JSON.stringify({type:"authentication",data:{session:r}})));break;case"event":let l=i.data;if(l!=null&&l.channels){if(!l.channels.some(u=>this.realtime.channels.has(u)))return;this.realtime.subscriptions.forEach(u=>{l.channels.some(h=>u.channels.includes(h))&&setTimeout(()=>u.callback(l))})}break;case"pong":break;case"error":throw i.data;default:break}}catch(i){console.error(i)}},cleanUp:t=>{this.realtime.channels.forEach(n=>{t.includes(n)&&(Array.from(this.realtime.subscriptions).some(([i,o])=>o.channels.includes(n))||this.realtime.channels.delete(n))})}}}setEndpoint(t){return this.config.endpoint=t,this.config.endpointRealtime=this.config.endpointRealtime||this.config.endpoint.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(t){return this.config.endpointRealtime=t,this}setProject(t){return this.headers["X-Appwrite-Project"]=t,this.config.project=t,this}setJWT(t){return this.headers["X-Appwrite-JWT"]=t,this.config.jwt=t,this}setLocale(t){return this.headers["X-Appwrite-Locale"]=t,this.config.locale=t,this}setSession(t){return this.headers["X-Appwrite-Session"]=t,this.config.session=t,this}subscribe(t,n){let a=typeof t=="string"?[t]:t;a.forEach(o=>this.realtime.channels.add(o));const i=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(i,{channels:a,callback:n}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(i),this.realtime.cleanUp(a),this.realtime.connect()}}prepareRequest(t,n,a={},i={}){if(t=t.toUpperCase(),a=Object.assign({},this.headers,a),typeof window<"u"&&window.localStorage){const r=window.localStorage.getItem("cookieFallback");r&&(a["X-Fallback-Cookies"]=r)}let o={method:t,headers:a,credentials:"include"};if(t==="GET")for(const[r,s]of Object.entries(I.flatten(i)))n.searchParams.append(r,s);else switch(a["content-type"]){case"application/json":o.body=JSON.stringify(i);break;case"multipart/form-data":const r=new FormData;for(const[s,l]of Object.entries(i))if(l instanceof File)r.append(s,l,l.name);else if(Array.isArray(l))for(const d of l)r.append(`${s}[]`,d);else r.append(s,l);o.body=r,delete a["content-type"];break}return{uri:n.toString(),options:o}}chunkedUpload(t,n,a={},i={},o){return C(this,void 0,void 0,function*(){const r=Object.values(i).find(d=>d instanceof File);if(r.size<=I.CHUNK_SIZE)return yield this.call(t,n,a,i);let s=0,l=null;for(;s<r.size;){let d=s+I.CHUNK_SIZE;d>=r.size&&(d=r.size),a["content-range"]=`bytes ${s}-${d-1}/${r.size}`;const u=r.slice(s,d);let h=Object.assign(Object.assign({},i),{file:new File([u],r.name)});l=yield this.call(t,n,a,h),o&&typeof o=="function"&&o({$id:l.$id,progress:Math.round(d/r.size*100),sizeUploaded:d,chunksTotal:Math.ceil(r.size/I.CHUNK_SIZE),chunksUploaded:Math.ceil(d/I.CHUNK_SIZE)}),l&&l.$id&&(a["x-appwrite-id"]=l.$id),s=d}return l})}ping(){return C(this,void 0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(t,n,a={},i={},o="json"){var r;return C(this,void 0,void 0,function*(){const{uri:s,options:l}=this.prepareRequest(t,n,a,i);let d=null;const u=yield fetch(s,l),h=u.headers.get("x-appwrite-warning");if(h&&h.split(";").forEach(N=>console.warn("Warning: "+N)),!((r=u.headers.get("content-type"))===null||r===void 0)&&r.includes("application/json")?d=yield u.json():o==="arrayBuffer"?d=yield u.arrayBuffer():d={message:yield u.text()},400<=u.status)throw new x(d==null?void 0:d.message,u.status,d==null?void 0:d.type,d);const T=u.headers.get("X-Fallback-Cookies");return typeof window<"u"&&window.localStorage&&T&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",T)),d})}static flatten(t,n=""){let a={};for(const[i,o]of Object.entries(t)){let r=n?n+"["+i+"]":i;Array.isArray(o)?a=Object.assign(Object.assign({},a),I.flatten(o,r)):a[r]=o}return a}}I.CHUNK_SIZE=1024*1024*5;class fe{constructor(t){this.client=t}listDocuments(t,n,a){return C(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof n>"u")throw new x('Missing required parameter: "collectionId"');const i="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",t).replace("{collectionId}",n),o={};typeof a<"u"&&(o.queries=a);const r=new URL(this.client.config.endpoint+i),s={"content-type":"application/json"};return yield this.client.call("get",r,s,o)})}createDocument(t,n,a,i,o){return C(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof n>"u")throw new x('Missing required parameter: "collectionId"');if(typeof a>"u")throw new x('Missing required parameter: "documentId"');if(typeof i>"u")throw new x('Missing required parameter: "data"');const r="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",t).replace("{collectionId}",n),s={};typeof a<"u"&&(s.documentId=a),typeof i<"u"&&(s.data=i),typeof o<"u"&&(s.permissions=o);const l=new URL(this.client.config.endpoint+r),d={"content-type":"application/json"};return yield this.client.call("post",l,d,s)})}getDocument(t,n,a,i){return C(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof n>"u")throw new x('Missing required parameter: "collectionId"');if(typeof a>"u")throw new x('Missing required parameter: "documentId"');const o="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",t).replace("{collectionId}",n).replace("{documentId}",a),r={};typeof i<"u"&&(r.queries=i);const s=new URL(this.client.config.endpoint+o),l={"content-type":"application/json"};return yield this.client.call("get",s,l,r)})}updateDocument(t,n,a,i,o){return C(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof n>"u")throw new x('Missing required parameter: "collectionId"');if(typeof a>"u")throw new x('Missing required parameter: "documentId"');const r="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",t).replace("{collectionId}",n).replace("{documentId}",a),s={};typeof i<"u"&&(s.data=i),typeof o<"u"&&(s.permissions=o);const l=new URL(this.client.config.endpoint+r),d={"content-type":"application/json"};return yield this.client.call("patch",l,d,s)})}deleteDocument(t,n,a){return C(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof n>"u")throw new x('Missing required parameter: "collectionId"');if(typeof a>"u")throw new x('Missing required parameter: "documentId"');const i="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",t).replace("{collectionId}",n).replace("{documentId}",a),o={},r=new URL(this.client.config.endpoint+i),s={"content-type":"application/json"};return yield this.client.call("delete",r,s,o)})}}var se,le;class ${static custom(t){return t}static unique(t=7){const n=pe($,se,"m",le).call($);let a="";for(let i=0;i<t;i++){const o=Math.floor(Math.random()*16).toString(16);a+=o}return n+a}}se=$,le=function(){const t=new Date,n=Math.floor(t.getTime()/1e3),a=t.getMilliseconds();return n.toString(16)+a.toString(16).padStart(5,"0")};var X;(function(e){e.Totp="totp"})(X||(X={}));var Y;(function(e){e.Email="email",e.Phone="phone",e.Totp="totp",e.Recoverycode="recoverycode"})(Y||(Y={}));var Q;(function(e){e.Amazon="amazon",e.Apple="apple",e.Auth0="auth0",e.Authentik="authentik",e.Autodesk="autodesk",e.Bitbucket="bitbucket",e.Bitly="bitly",e.Box="box",e.Dailymotion="dailymotion",e.Discord="discord",e.Disqus="disqus",e.Dropbox="dropbox",e.Etsy="etsy",e.Facebook="facebook",e.Github="github",e.Gitlab="gitlab",e.Google="google",e.Linkedin="linkedin",e.Microsoft="microsoft",e.Notion="notion",e.Oidc="oidc",e.Okta="okta",e.Paypal="paypal",e.PaypalSandbox="paypalSandbox",e.Podio="podio",e.Salesforce="salesforce",e.Slack="slack",e.Spotify="spotify",e.Stripe="stripe",e.Tradeshift="tradeshift",e.TradeshiftBox="tradeshiftBox",e.Twitch="twitch",e.Wordpress="wordpress",e.Yahoo="yahoo",e.Yammer="yammer",e.Yandex="yandex",e.Zoho="zoho",e.Zoom="zoom",e.Mock="mock"})(Q||(Q={}));var F;(function(e){e.AvantBrowser="aa",e.AndroidWebViewBeta="an",e.GoogleChrome="ch",e.GoogleChromeIOS="ci",e.GoogleChromeMobile="cm",e.Chromium="cr",e.MozillaFirefox="ff",e.Safari="sf",e.MobileSafari="mf",e.MicrosoftEdge="ps",e.MicrosoftEdgeIOS="oi",e.OperaMini="om",e.Opera="op",e.OperaNext="on"})(F||(F={}));var ee;(function(e){e.AmericanExpress="amex",e.Argencard="argencard",e.Cabal="cabal",e.Cencosud="cencosud",e.DinersClub="diners",e.Discover="discover",e.Elo="elo",e.Hipercard="hipercard",e.JCB="jcb",e.Mastercard="mastercard",e.Naranja="naranja",e.TarjetaShopping="targeta-shopping",e.UnionChinaPay="union-china-pay",e.Visa="visa",e.MIR="mir",e.Maestro="maestro"})(ee||(ee={}));var te;(function(e){e.Afghanistan="af",e.Angola="ao",e.Albania="al",e.Andorra="ad",e.UnitedArabEmirates="ae",e.Argentina="ar",e.Armenia="am",e.AntiguaAndBarbuda="ag",e.Australia="au",e.Austria="at",e.Azerbaijan="az",e.Burundi="bi",e.Belgium="be",e.Benin="bj",e.BurkinaFaso="bf",e.Bangladesh="bd",e.Bulgaria="bg",e.Bahrain="bh",e.Bahamas="bs",e.BosniaAndHerzegovina="ba",e.Belarus="by",e.Belize="bz",e.Bolivia="bo",e.Brazil="br",e.Barbados="bb",e.BruneiDarussalam="bn",e.Bhutan="bt",e.Botswana="bw",e.CentralAfricanRepublic="cf",e.Canada="ca",e.Switzerland="ch",e.Chile="cl",e.China="cn",e.CoteDIvoire="ci",e.Cameroon="cm",e.DemocraticRepublicOfTheCongo="cd",e.RepublicOfTheCongo="cg",e.Colombia="co",e.Comoros="km",e.CapeVerde="cv",e.CostaRica="cr",e.Cuba="cu",e.Cyprus="cy",e.CzechRepublic="cz",e.Germany="de",e.Djibouti="dj",e.Dominica="dm",e.Denmark="dk",e.DominicanRepublic="do",e.Algeria="dz",e.Ecuador="ec",e.Egypt="eg",e.Eritrea="er",e.Spain="es",e.Estonia="ee",e.Ethiopia="et",e.Finland="fi",e.Fiji="fj",e.France="fr",e.MicronesiaFederatedStatesOf="fm",e.Gabon="ga",e.UnitedKingdom="gb",e.Georgia="ge",e.Ghana="gh",e.Guinea="gn",e.Gambia="gm",e.GuineaBissau="gw",e.EquatorialGuinea="gq",e.Greece="gr",e.Grenada="gd",e.Guatemala="gt",e.Guyana="gy",e.Honduras="hn",e.Croatia="hr",e.Haiti="ht",e.Hungary="hu",e.Indonesia="id",e.India="in",e.Ireland="ie",e.IranIslamicRepublicOf="ir",e.Iraq="iq",e.Iceland="is",e.Israel="il",e.Italy="it",e.Jamaica="jm",e.Jordan="jo",e.Japan="jp",e.Kazakhstan="kz",e.Kenya="ke",e.Kyrgyzstan="kg",e.Cambodia="kh",e.Kiribati="ki",e.SaintKittsAndNevis="kn",e.SouthKorea="kr",e.Kuwait="kw",e.LaoPeopleSDemocraticRepublic="la",e.Lebanon="lb",e.Liberia="lr",e.Libya="ly",e.SaintLucia="lc",e.Liechtenstein="li",e.SriLanka="lk",e.Lesotho="ls",e.Lithuania="lt",e.Luxembourg="lu",e.Latvia="lv",e.Morocco="ma",e.Monaco="mc",e.Moldova="md",e.Madagascar="mg",e.Maldives="mv",e.Mexico="mx",e.MarshallIslands="mh",e.NorthMacedonia="mk",e.Mali="ml",e.Malta="mt",e.Myanmar="mm",e.Montenegro="me",e.Mongolia="mn",e.Mozambique="mz",e.Mauritania="mr",e.Mauritius="mu",e.Malawi="mw",e.Malaysia="my",e.Namibia="na",e.Niger="ne",e.Nigeria="ng",e.Nicaragua="ni",e.Netherlands="nl",e.Norway="no",e.Nepal="np",e.Nauru="nr",e.NewZealand="nz",e.Oman="om",e.Pakistan="pk",e.Panama="pa",e.Peru="pe",e.Philippines="ph",e.Palau="pw",e.PapuaNewGuinea="pg",e.Poland="pl",e.FrenchPolynesia="pf",e.NorthKorea="kp",e.Portugal="pt",e.Paraguay="py",e.Qatar="qa",e.Romania="ro",e.Russia="ru",e.Rwanda="rw",e.SaudiArabia="sa",e.Sudan="sd",e.Senegal="sn",e.Singapore="sg",e.SolomonIslands="sb",e.SierraLeone="sl",e.ElSalvador="sv",e.SanMarino="sm",e.Somalia="so",e.Serbia="rs",e.SouthSudan="ss",e.SaoTomeAndPrincipe="st",e.Suriname="sr",e.Slovakia="sk",e.Slovenia="si",e.Sweden="se",e.Eswatini="sz",e.Seychelles="sc",e.Syria="sy",e.Chad="td",e.Togo="tg",e.Thailand="th",e.Tajikistan="tj",e.Turkmenistan="tm",e.TimorLeste="tl",e.Tonga="to",e.TrinidadAndTobago="tt",e.Tunisia="tn",e.Turkey="tr",e.Tuvalu="tv",e.Tanzania="tz",e.Uganda="ug",e.Ukraine="ua",e.Uruguay="uy",e.UnitedStates="us",e.Uzbekistan="uz",e.VaticanCity="va",e.SaintVincentAndTheGrenadines="vc",e.Venezuela="ve",e.Vietnam="vn",e.Vanuatu="vu",e.Samoa="ws",e.Yemen="ye",e.SouthAfrica="za",e.Zambia="zm",e.Zimbabwe="zw"})(te||(te={}));var ae;(function(e){e.GET="GET",e.POST="POST",e.PUT="PUT",e.PATCH="PATCH",e.DELETE="DELETE",e.OPTIONS="OPTIONS"})(ae||(ae={}));var ne;(function(e){e.Center="center",e.Topleft="top-left",e.Top="top",e.Topright="top-right",e.Left="left",e.Right="right",e.Bottomleft="bottom-left",e.Bottom="bottom",e.Bottomright="bottom-right"})(ne||(ne={}));var ie;(function(e){e.Jpg="jpg",e.Jpeg="jpeg",e.Gif="gif",e.Png="png",e.Webp="webp",e.Heic="heic",e.Avif="avif"})(ie||(ie={}));async function he(e,t,n){B("addTeamMemberBtn","addTeamMemberSpinner","addTeamMemberBtnText");try{const a=await g.createDocument(v,b.teamMembers,$.unique(),{userId:n,name:e,dailyHours:t});c(`Team member ${e} added successfully!`,!1,"modal"),document.getElementById("addTeamMemberForm").reset(),await j()}catch(a){c(`Error adding team member: ${a.message}`,!0,"modal"),console.error("Error adding team member:",a)}finally{w("addTeamMemberBtn","addTeamMemberSpinner","addTeamMemberBtnText")}}async function j(){const e=document.getElementById("teamMemberTime"),t=document.getElementById("teamMemberHoliday"),n=document.getElementById("filterTeamMember"),a=document.getElementById("teamMemberList");e&&(e.innerHTML='<option value="">Select Team Member</option>'),t&&(t.innerHTML='<option value="">Select Team Member</option>'),n&&(n.innerHTML='<option value="">All Team Members</option>'),a&&(a.innerHTML='<p class="text-gray-500 text-center py-4">Loading team members...</p>');try{const i=await g.listDocuments(v,b.teamMembers,[m.limit(100)]);if(De(i.documents),i.documents.length===0){a&&(a.innerHTML='<p class="text-gray-500 text-center py-4">No team members added yet.</p>');return}let o="";i.documents.forEach(s=>{const l=`<option value="${s.$id}">${s.name}</option>`;e&&(e.innerHTML+=l),t&&(t.innerHTML+=l),n&&(n.innerHTML+=l),o+=`
                <div class="flex justify-between items-center bg-gray-600 p-2 rounded-md shadow-sm">
                    <span class="text-gray-200">${s.name} (${s.dailyHours} hrs/day)</span>
                    <div class="flex space-x-2">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-team-member-btn"
                                data-id="${s.$id}" data-name="${s.name}" data-daily-hours="${s.dailyHours}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-team-member-btn"
                                data-id="${s.$id}">Delete</button>
                    </div>
                </div>
            `}),a&&(a.innerHTML=o);const r=document.getElementById("manageTeamMembersSection");r&&(r.removeEventListener("click",oe),r.addEventListener("click",oe))}catch(i){c(`Error listing team members: ${i.message}`,!0),console.error("Error listing team members:",i),a&&(a.innerHTML='<p class="text-red-500 text-center py-4">Failed to load team members.</p>')}}function oe(e){const t=e.target;if(t.classList.contains("edit-team-member-btn")){const n=t.dataset;be(n.id,n.name,parseFloat(n.dailyHours))}else if(t.classList.contains("delete-team-member-btn")){const n=t.dataset.id;de(n)}}function be(e,t,n){A({title:"Update Team Member",message:"Update the team member's details:",inputs:[{id:"modalTeamMemberName",label:"Name",type:"text",value:t,required:!0},{id:"modalTeamMemberHours",label:"Daily Work Hours",type:"number",value:n,step:"0.5",min:"0",required:!0}],onConfirm:async()=>{const a=document.getElementById("modalTeamMemberName").value,i=parseFloat(document.getElementById("modalTeamMemberHours").value);a&&!isNaN(i)&&i>=0?await ge(e,a,i):c("Please enter valid name and daily work hours.",!0,"modal")},onCancel:()=>c("Team member update cancelled.",!1)})}async function ge(e,t,n){const a=D();try{await g.updateDocument(v,b.teamMembers,e,{userId:a,name:t,dailyHours:n}),c(`Team member ${t} updated successfully!`,!1,"modal"),await j()}catch(i){c(`Error updating team member ${t}: ${i.message}`,!0,"modal"),console.error("Error updating team member:",i)}}async function de(e){A({title:"Confirm Deletion",message:`Are you sure you want to delete this team member (ID: ${e})? This will also remove their associated time entries and holidays. This action cannot be undone.`,isError:!0,showCancel:!0,onConfirm:async()=>{var t;try{const n=await g.listDocuments(v,b.timeEntries,[m.equal("teamMember",e),m.limit(100)]);for(const o of n.documents)await g.deleteDocument(v,b.timeEntries,o.$id);c(`Deleted ${n.documents.length} associated time entries.`,!1);const a=await g.listDocuments(v,b.holidays,[m.equal("teamMember",e),m.limit(100)]);for(const o of a.documents)await g.deleteDocument(v,b.holidays,o.$id);c(`Deleted ${a.documents.length} associated holiday records.`,!1),await g.deleteDocument(v,b.teamMembers,e),c("Team member deleted successfully!",!1,"modal"),await j();const i=(t=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:t.id;i==="tableViewBtn"?await displayFilteredTimeEntries():i==="holidaysViewBtn"&&await displayHolidays()}catch(n){c(`Error deleting team member: ${n.message}`,!0,"modal"),console.error("Error deleting team member:",n)}},onCancel:()=>c("Team member deletion cancelled.",!1)})}async function ve(){B("deleteAllTeamMembersBtn","deleteAllTeamMembersSpinner","deleteAllTeamMembersBtnText");try{const e=await g.listDocuments(v,b.teamMembers,[m.limit(100)]);if(e.documents.length===0){c("No team members to delete.",!1,"modal");return}for(const t of e.documents)await de(t.$id);c(`Successfully deleted ${e.documents.length} team members and their associated data.`,!1,"modal"),await j()}catch(e){c(`Error deleting all team members: ${e.message}`,!0,"modal"),console.error("Error deleting all team members:",e)}finally{w("deleteAllTeamMembersBtn","deleteAllTeamMembersSpinner","deleteAllTeamMembersBtnText")}}async function we(e,t){B("addActivityCategoryBtn","addActivityCategorySpinner","addActivityCategoryBtnText");try{const n=await g.createDocument(v,b.activityCategories,$.unique(),{userId:t,name:e});c(`Activity category "${e}" added successfully!`,!1,"modal"),document.getElementById("addActivityCategoryForm").reset(),await U()}catch(n){c(`Error adding activity category: ${n.message}`,!0,"modal"),console.error("Error adding activity category:",n)}finally{w("addActivityCategoryBtn","addActivityCategorySpinner","addActivityCategoryBtnText")}}async function U(){const e=document.getElementById("activity"),t=document.getElementById("filterActivity"),n=document.getElementById("activityCategoryList");e&&(e.innerHTML='<option value="">Select Activity</option>'),t&&(t.innerHTML='<option value="">All Activities</option>'),n&&(n.innerHTML='<p class="text-gray-500 text-center py-4">Loading categories...</p>');try{const a=await g.listDocuments(v,b.activityCategories,[m.limit(100)]);if(Se(a.documents),a.documents.length===0){n&&(n.innerHTML='<p class="text-gray-500 text-center py-4">No categories added yet.</p>');return}let i="";a.documents.forEach(r=>{const s=`<option value="${r.name}">${r.name}</option>`;e&&(e.innerHTML+=s),t&&(t.innerHTML+=s),i+=`
                <div class="flex justify-between items-center bg-gray-600 p-2 rounded-md shadow-sm">
                    <span class="text-gray-200">${r.name}</span>
                    <div class="flex space-x-2">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-activity-category-btn"
                                data-id="${r.$id}" data-name="${r.name}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-activity-category-btn"
                                data-id="${r.$id}">Delete</button>
                    </div>
                </div>
            `}),n&&(n.innerHTML=i);const o=document.getElementById("activityCategoryManagement");o&&(o.removeEventListener("click",re),o.addEventListener("click",re))}catch(a){c(`Error listing activity categories: ${a.message}`,!0),console.error("Error listing activity categories:",a),n&&(n.innerHTML='<p class="text-red-500 text-center py-4">Failed to load categories.</p>')}}function re(e){const t=e.target;if(t.classList.contains("edit-activity-category-btn")){const n=t.dataset;Ee(n.id,n.name)}else if(t.classList.contains("delete-activity-category-btn")){const n=t.dataset.id;Te(n)}}function Ee(e,t){A({title:"Update Activity Category",message:"Update the activity category name:",inputs:[{id:"modalActivityCategoryName",label:"Category Name",type:"text",value:t,required:!0}],onConfirm:async()=>{const n=document.getElementById("modalActivityCategoryName").value;n?await xe(e,n):c("Please enter a category name.",!0,"modal")},onCancel:()=>c("Activity category update cancelled.",!1)})}async function xe(e,t){const n=D();try{await g.updateDocument(v,b.activityCategories,e,{userId:n,name:t}),c(`Activity category "${t}" updated successfully!`,!1,"modal"),await U()}catch(a){c(`Error updating activity category "${t}": ${a.message}`,!0,"modal"),console.error("Error updating activity category:",a)}}async function Te(e){A({title:"Confirm Deletion",message:`Are you sure you want to delete this activity category (ID: ${e})? This action cannot be undone.`,isError:!0,showCancel:!0,onConfirm:async()=>{try{await g.deleteDocument(v,b.activityCategories,e),c("Activity category deleted successfully!",!1,"modal"),await U()}catch(t){c(`Error deleting activity category: ${t.message}`,!0,"modal"),console.error("Error deleting activity category:",t)}},onCancel:()=>c("Deletion cancelled.",!1)})}async function Be(){B("deleteAllActivityCategoriesBtn","deleteAllActivityCategoriesSpinner","deleteAllActivityCategoriesBtnText");try{const e=await g.listDocuments(v,b.activityCategories,[m.limit(100)]);if(e.documents.length===0){c("No activity categories to delete.",!1,"modal");return}for(const t of e.documents)await g.deleteDocument(v,b.activityCategories,t.$id);c(`Successfully deleted ${e.documents.length} activity categories.`,!1,"modal"),await U()}catch(e){c(`Error deleting all activity categories: ${e.message}`,!0,"modal"),console.error("Error deleting all activity categories:",e)}finally{w("deleteAllActivityCategoriesBtn","deleteAllActivityCategoriesSpinner","deleteAllActivityCategoriesBtnText")}}let S=null;async function K(){const e=document.getElementById("dataContainer"),t=document.getElementById("utilizationChartContainer");if(!e||!t){console.error("Data or chart container not found!");return}e.innerHTML='<p class="text-gray-500 text-center py-8">Loading summary data...</p>',t.innerHTML='<h3 class="text-lg font-semibold text-gray-100 mb-4 text-center">Resource Utilization %</h3><canvas id="utilizationChart"></canvas>';const n=document.getElementById("filterStartDate").value,a=document.getElementById("filterEndDate").value,i=[];n&&i.push(m.greaterThanEqual("date",n)),a&&i.push(m.lessThanEqual("date",a)),i.push(m.orderAsc("date"));try{const o=await g.listDocuments(v,b.timeEntries,i),r=await g.listDocuments(v,b.holidays,[n?m.lessThanEqual("startDate",a):null,a?m.greaterThanEqual("endDate",n):null,m.limit(100)].filter(Boolean));if(o.documents.length===0&&r.documents.length===0){e.innerHTML='<p class="text-gray-500 text-center py-8">No time entries or holiday records found for the selected period.</p>',c("No summary data found for filters.",!1),S&&(S.destroy(),S=null);return}const s={},l=new Map(M.map(y=>[y.$id,y.dailyHours]));o.documents.forEach(y=>{s[y.teamMember]||(s[y.teamMember]={totalHours:0,totalAvailableHours:0,totalHolidayHours:0}),s[y.teamMember].totalHours+=y.hoursSpent});const d=n?new Date(n):null,u=a?new Date(a):null;r.documents.forEach(y=>{const p=new Date(y.startDate),f=new Date(y.endDate),E=y.teamMember,L=l.get(E)||0;s[E]||(s[E]={totalHours:0,totalAvailableHours:0,totalHolidayHours:0});const H=d?new Date(Math.max(p,d)):p,q=u?new Date(Math.min(f,u)):f;if(H<=q){let Z=0;for(let _=new Date(H);_<=q;_.setDate(_.getDate()+1))_.getDay()!==0&&_.getDay()!==6&&Z++;s[E].totalHolidayHours+=Z*L}});let h=0;if(d&&u)for(let y=new Date(d);y<=u;y.setDate(y.getDate()+1))y.getDay()!==0&&y.getDay()!==6&&h++;else c("Please select a date range for accurate utilization calculations.",!1);M.forEach(y=>{s[y.$id]||(s[y.$id]={totalHours:0,totalAvailableHours:0,totalHolidayHours:0}),s[y.$id].totalAvailableHours=h*y.dailyHours});let T=`
            <table class="min-w-full bg-gray-700 rounded-md overflow-hidden text-sm mb-8">
                <thead class="bg-gray-600 text-gray-200">
                    <tr>
                        <th class="py-2 px-3 text-left">Team Member</th>
                        <th class="py-2 px-3 text-left">Logged Hours</th>
                        <th class="py-2 px-3 text-left">Holiday Hours</th>
                        <th class="py-2 px-3 text-left">Available Hours</th>
                        <th class="py-2 px-3 text-left">Utilization %</th>
                    </tr>
                </thead>
                <tbody class="text-gray-300">
        `;const N=[],V=[],z=[];M.forEach(y=>{const p=s[y.$id]||{totalHours:0,totalAvailableHours:0,totalHolidayHours:0},f=p.totalAvailableHours-p.totalHolidayHours,E=f>0?p.totalHours/f*100:0;N.push(y.name),V.push(E.toFixed(2)),z.push(E>100?"#ef4444":E>80?"#f59e0b":"#3b82f6"),T+=`
                <tr class="border-b border-gray-600 last:border-0">
                    <td class="py-2 px-3">${y.name}</td>
                    <td class="py-2 px-3">${p.totalHours.toFixed(2)}</td>
                    <td class="py-2 px-3">${p.totalHolidayHours.toFixed(2)}</td>
                    <td class="py-2 px-3">${f.toFixed(2)}</td>
                    <td class="py-2 px-3">${E.toFixed(2)}%</td>
                </tr>
            `}),T+=`
                </tbody>
            </table>
        `,e.innerHTML=T;const W=document.getElementById("utilizationChart").getContext("2d");S&&S.destroy(),S=new Chart(W,{type:"bar",data:{labels:N,datasets:[{label:"Utilization %",data:V,backgroundColor:z,borderColor:z.map(y=>y.replace("0.8","1")),borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},title:{display:!0,text:"Resource Utilization by Team Member",color:"#e2e8f0"},datalabels:{anchor:"end",align:"top",formatter:y=>y+"%",color:"#e2e8f0",font:{weight:"bold"}}},scales:{x:{grid:{color:"#4b5563"},ticks:{color:"#e2e8f0"}},y:{beginAtZero:!0,max:120,grid:{color:"#4b5563"},ticks:{color:"#e2e8f0",callback:function(y){return y+"%"}}}},animation:{duration:1e3,easing:"easeOutQuart"}},plugins:[ChartDataLabels]}),c(`Displayed summary for ${M.length} team members.`,!1)}catch(o){c(`Error displaying summary: ${o.message}`,!0),console.error("Error displaying summary:",o),e.innerHTML='<p class="text-red-500 text-center py-8">Failed to load summary data.</p>',S&&(S.destroy(),S=null)}}async function G(e){try{return(await g.listDocuments(v,e,[m.limit(5e3)])).documents}catch(t){return console.error(`Error fetching data from ${e}:`,t),c(`Failed to fetch data from ${e} for export.`,!0),[]}}function O(e,t){if(!e||e.length===0)return"";const n=t||Object.keys(e[0]),a=r=>{if(r==null)return"";let s=String(r);return s.includes(",")||s.includes('"')||s.includes(`
`)?`"${s.replace(/"/g,'""')}"`:s},i=n.map(a).join(","),o=e.map(r=>n.map(s=>a(r[s])).join(","));return[i,...o].join(`
`)}function J(e,t){const n=new Blob([e],{type:"text/csv;charset=utf-8;"}),a=document.createElement("a");if(a.download!==void 0){const i=URL.createObjectURL(n);a.setAttribute("href",i),a.setAttribute("download",t),a.style.visibility="hidden",document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(i)}else c("Your browser does not support automatic CSV download. Please copy the text manually.",!0,"modal"),console.log(e)}async function Me(){B("exportDataBtn","exportDataSpinner","exportDataBtnText"),D();try{c("Fetching data for export...",!1);const e=await G(b.teamMembers),t=await G(b.holidays),n=await G(b.timeEntries),a=await G(b.activityCategories),i=n.map(u=>{const h=M.find(T=>T.$id===u.teamMember);return{...u,teamMemberName:h?h.name:"Unknown",activityCategoryName:u.activity}}),o=t.map(u=>{const h=M.find(T=>T.$id===u.teamMember);return{...u,teamMemberName:h?h.name:"Unknown"}}),r=["name","dailyHours","$id","userId"],s=["name","$id","userId"],l=["date","teamMemberName","activity","hoursSpent","ticketNumber","notes","$id","userId"],d=["startDate","endDate","teamMemberName","holidayType","reason","$id","userId"];e.length>0?J(O(e,r),"effortwall_team_members.csv"):c("No team members to export.",!1),a.length>0?J(O(a,s),"effortwall_activity_categories.csv"):c("No activity categories to export.",!1),i.length>0?J(O(i,l),"effortwall_time_entries.csv"):c("No time entries to export.",!1),o.length>0?J(O(o,d),"effortwall_holiday_records.csv"):c("No holiday records to export.",!1),c("Export process completed. Check your downloads folder.",!1,"modal")}catch(e){c(`Error during export: ${e.message}`,!0,"modal"),console.error("Export error:",e)}finally{w("exportDataBtn","exportDataSpinner","exportDataBtnText")}}const ce="685d30a7003089fdc61a",me="https://nyc.cloud.appwrite.io/v1";console.log("--- Appwrite Config Debug ---");console.log("Resolved APPWRITE_PROJECT_ID:",ce);console.log("Resolved APPWRITE_ENDPOINT:",me);console.log("---------------------------");document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("statusMessage");e&&(e.textContent="Connecting to Appwrite...")});const v="685d34970008292a6c80",b={teamMembers:"685d4a8d00314e8e9ce3",holidays:"685d3f0a001c6ed5cc65",timeEntries:"685d35e8001fc90f9dab",activityCategories:"685d7dd2001b35eaf00c"},ue=new I;ue.setEndpoint(me).setProject(ce);const g=new fe(ue);console.log("Appwrite Databases object initialized:",g);let M=[],ye=[];function De(e){M=e}function Se(e){ye=e}function D(){let e=localStorage.getItem("guestUserId");return e?console.log("Using existing guest userId:",e):(e=$.unique(),localStorage.setItem("guestUserId",e),console.log("Generated new guest userId:",e)),e}function c(e,t=!1,n="status"){if(n==="status"){const a=document.getElementById("statusMessage");a&&(a.innerHTML=`<span class="${t?"text-red-500":"text-green-500"}">${e}</span>`)}else n==="modal"&&A({title:t?"Error":"Notification",message:e,isError:t,showCancel:!1});console.log(e)}function B(e,t,n){const a=document.getElementById(e),i=document.getElementById(t),o=document.getElementById(n);a&&(a.disabled=!0),o&&o.classList.add("hidden"),i&&i.classList.remove("hidden")}function w(e,t,n){const a=document.getElementById(e),i=document.getElementById(t),o=document.getElementById(n);a&&(a.disabled=!1),o&&o.classList.remove("hidden"),i&&i.classList.add("hidden")}function A({title:e,message:t,isError:n=!1,showCancel:a=!0,onConfirm:i,onCancel:o,inputs:r=[]}){let s=document.getElementById("messageModal");s||(s=document.createElement("div"),s.id="messageModal",document.body.appendChild(s));let l=r.map(d=>d.type==="select"?`
                <div class="mb-4">
                    <label for="${d.id}" class="block text-sm font-medium text-gray-300 mb-1">${d.label}:</label>
                    <select id="${d.id}" class="p-2 rounded-md bg-gray-700 text-white w-full border border-gray-600 focus:outline-none focus:ring-2 ${n?"focus:ring-red-500":"focus:ring-blue-500"}" ${d.required?"required":""}>
                        ${d.options?d.options.map(u=>`<option value="${u.value}" ${u.value===d.value?"selected":""}>${u.text}</option>`).join(""):""}
                    </select>
                </div>
            `:d.type==="textarea"?`
                <div class="mb-4">
                    <label for="${d.id}" class="block text-sm font-medium text-gray-300 mb-1">${d.label}:</label>
                    <textarea id="${d.id}" class="p-2 rounded-md bg-gray-700 text-white w-full border border-gray-600 focus:outline-none focus:ring-2 ${n?"focus:ring-red-500":"focus:ring-blue-500"}" placeholder="${d.placeholder||""}" ${d.required?"required":""}>${d.value||""}</textarea>
                </div>
            `:d.type==="radio"?`
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-300 mb-1">${d.label}:</label>
                    <div class="flex items-center space-x-4">
                        ${d.options.map(u=>`
                            <label class="inline-flex items-center">
                                <input type="radio" name="${d.name}" value="${u.value}" class="form-radio text-indigo-500" ${u.value===d.value?"checked":""} ${d.required?"required":""}>
                                <span class="ml-2 text-gray-300">${u.label}</span>
                            </label>
                        `).join("")}
                    </div>
                </div>
            `:`
                <div class="mb-4">
                    <label for="${d.id}" class="block text-sm font-medium text-gray-300 mb-1">${d.label}:</label>
                    <input type="${d.type||"text"}" id="${d.id}" value="${d.value||""}"
                           class="p-2 rounded-md bg-gray-700 text-white w-full border border-gray-600 focus:outline-none focus:ring-2 ${n?"focus:ring-red-500":"focus:ring-blue-500"}"
                           placeholder="${d.placeholder||""}" ${d.required?"required":""}>
                </div>
            `).join("");s.className="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50",s.innerHTML=`
        <div class="bg-gray-800 p-6 rounded-lg shadow-xl text-gray-100 w-full max-w-md">
            <h2 class="text-xl font-bold mb-4 ${n?"text-red-400":"text-blue-400"}">${e}</h2>
            <p class="mb-6">${t}</p>
            ${l}
            <div class="flex justify-end space-x-4">
                <button id="modalConfirmBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg">Confirm</button>
                ${a?'<button id="modalCancelBtn" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-lg">Cancel</button>':""}
            </div>
        </div>
    `,document.getElementById("modalConfirmBtn").onclick=()=>{s.classList.add("hidden"),i&&i()},a&&(document.getElementById("modalCancelBtn").onclick=()=>{s.classList.add("hidden"),o&&o()}),s.classList.remove("hidden")}async function Ie(e,t,n,a,i,o){B("logEffortBtn","logEffortSpinner","logEffortBtnText");const r=D();try{const s=await g.createDocument(v,b.timeEntries,$.unique(),{userId:r,teamMember:e,activity:t,ticketNumber:n,hoursSpent:a,date:i,notes:o});c(`Time logged successfully! Document ID: ${s.$id}`,!1,"modal"),console.log("Logged Time Entry:",s),document.getElementById("timeTrackForm").reset(),document.getElementById("tableViewBtn").classList.contains("bg-indigo-700")&&await k()}catch(s){c(`Error logging time: ${s.message}`,!0,"modal"),console.error("Error logging time:",s)}finally{w("logEffortBtn","logEffortSpinner","logEffortBtnText")}}async function k(){const e=document.getElementById("dataContainer");if(!e){console.error("Data container not found!");return}e.innerHTML='<p class="text-gray-500 text-center py-8">Loading time entries...</p>';const t=document.getElementById("filterStartDate").value,n=document.getElementById("filterEndDate").value,a=document.getElementById("filterTeamMember").value,i=document.getElementById("filterActivity").value,o=[];t&&o.push(m.greaterThanEqual("date",t)),n&&o.push(m.lessThanEqual("date",n)),a&&o.push(m.equal("teamMember",a)),i&&o.push(m.equal("activity",i)),o.push(m.orderDesc("date"));try{const r=await g.listDocuments(v,b.timeEntries,o);if(r.documents.length===0){e.innerHTML='<p class="text-gray-500 text-center py-8">No time entries found for the selected filters.</p>',c("No time entries found for filters.",!1);return}let s=`
            <table class="min-w-full bg-gray-700 rounded-md overflow-hidden text-sm">
                <thead class="bg-gray-600 text-gray-200">
                    <tr>
                        <th class="py-2 px-3 text-left">Date</th>
                        <th class="py-2 px-3 text-left">Member</th>
                        <th class="py-2 px-3 text-left">Activity</th>
                        <th class="py-2 px-3 text-left">Hours</th>
                        <th class="py-2 px-3 text-left">Ticket</th>
                        <th class="py-2 px-3 text-left">Notes</th>
                        <th class="py-2 px-3 text-left">Actions</th>
                    </tr>
                </thead>
                <tbody class="text-gray-300">
        `;r.documents.forEach(l=>{var u;const d=((u=M.find(h=>h.$id===l.teamMember))==null?void 0:u.name)||"Unknown";s+=`
                <tr class="border-b border-gray-600 last:border-0">
                    <td class="py-2 px-3">${l.date}</td>
                    <td class="py-2 px-3">${d}</td>
                    <td class="py-2 px-3">${l.activity}</td>
                    <td class="py-2 px-3">${l.hoursSpent.toFixed(2)}</td>
                    <td class="py-2 px-3">${l.ticketNumber||"N/A"}</td>
                    <td class="py-2 px-3">${l.notes||"N/A"}</td>
                    <td class="py-2 px-3 flex flex-col sm:flex-row gap-1">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-time-entry-btn"
                                data-id="${l.$id}"
                                data-date="${l.date}"
                                data-team-member="${l.teamMember}"
                                data-activity="${l.activity}"
                                data-ticket-number="${l.ticketNumber||""}"
                                data-hours-spent="${l.hoursSpent}"
                                data-notes="${l.notes?l.notes.replace(/"/g,"&quot;"):""}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-time-entry-btn"
                                data-id="${l.$id}">Delete</button>
                    </td>
                </tr>
            `}),s+=`
                </tbody>
            </table>
        `,e.innerHTML=s,c(`Displayed ${r.documents.length} time entries.`,!1)}catch(r){c(`Error displaying time entries: ${r.message}`,!0),console.error("Error displaying time entries:",r),e.innerHTML='<p class="text-red-500 text-center py-8">Failed to load time entries.</p>'}}function $e(e,t,n,a,i,o,r){A({title:"Update Time Entry",message:"Update details for this time entry:",inputs:[{id:"modalTimeEntryDate",label:"Date",type:"date",value:t,required:!0},{id:"modalTimeEntryTeamMember",label:"Team Member",type:"select",value:n,options:M.map(s=>({value:s.$id,text:s.name})),required:!0},{id:"modalTimeEntryActivity",label:"Activity",type:"select",value:a,options:ye.map(s=>({value:s.name,text:s.name})),required:!0},{id:"modalTimeEntryTicket",label:"Ticket Number",type:"text",value:i||"",placeholder:"e.g., SUP-12345"},{id:"modalTimeEntryHours",label:"Duration (hours)",type:"number",value:o,step:"0.01",min:"0",required:!0},{id:"modalTimeEntryNotes",label:"Notes",type:"textarea",value:r||"",placeholder:"Add any relevant notes..."}],onConfirm:async()=>{const s=document.getElementById("modalTimeEntryDate").value,l=document.getElementById("modalTimeEntryTeamMember").value,d=document.getElementById("modalTimeEntryActivity").value,u=document.getElementById("modalTimeEntryTicket").value,h=parseFloat(document.getElementById("modalTimeEntryHours").value),T=document.getElementById("modalTimeEntryNotes").value;l&&d&&!isNaN(h)&&h>0&&s?await Le(e,l,d,u,h,s,T):c("Please ensure all required fields are valid.",!0,"modal")},onCancel:()=>c("Time entry update cancelled.",!1)})}async function Le(e,t,n,a,i,o,r){const s=D();try{await g.updateDocument(v,b.timeEntries,e,{userId:s,teamMember:t,activity:n,ticketNumber:a,hoursSpent:i,date:o,notes:r}),c(`Time entry with ID ${e} updated successfully!`,!1,"modal"),await k()}catch(l){c(`Error updating time entry ${e}: ${l.message}`,!0,"modal"),console.error("Error updating time entry:",l)}}async function He(e){A({title:"Confirm Deletion",message:`Are you sure you want to delete this time entry (ID: ${e})? This action cannot be undone.`,isError:!0,showCancel:!0,onConfirm:async()=>{try{await g.deleteDocument(v,b.timeEntries,e),c(`Time entry with ID ${e} deleted successfully!`,!1,"modal"),await k()}catch(t){c(`Error deleting time entry ${e}: ${t.message}`,!0,"modal"),console.error("Error deleting time entry:",t)}},onCancel:()=>c("Deletion cancelled.",!1)})}async function Ce(){B("deleteAllTimeEntriesBtn","deleteAllTimeEntriesSpinner","deleteAllTimeEntriesBtnText");try{const e=await g.listDocuments(v,b.timeEntries,[m.limit(100)]);if(e.documents.length===0){c("No time entries to delete.",!1,"modal");return}for(const t of e.documents)await g.deleteDocument(v,b.timeEntries,t.$id);c(`Successfully deleted ${e.documents.length} time entries.`,!1,"modal"),await k()}catch(e){c(`Error deleting all time entries: ${e.message}`,!0,"modal"),console.error("Error deleting all time entries:",e)}finally{w("deleteAllTimeEntriesBtn","deleteAllTimeEntriesSpinner","deleteAllTimeEntriesBtnText")}}function P(e){const t=document.getElementById("filterTeamMemberWrapper"),n=document.getElementById("filterActivityWrapper"),a=document.getElementById("filterHolidayTypeWrapper"),i=document.getElementById("copyButtonsContainer"),o=document.getElementById("copyGraphButtonWrapper");document.getElementById("filterControls").classList.add("hidden"),document.getElementById("dataContainer").classList.add("hidden"),document.getElementById("manageTeamMembersSection").classList.add("hidden"),document.getElementById("utilizationChartContainer").classList.add("hidden");const r=document.getElementById("activityCategoryManagement");r&&r.classList.add("hidden"),t&&t.classList.add("hidden"),n&&n.classList.add("hidden"),a&&a.classList.add("hidden"),i&&i.classList.add("hidden"),o&&o.classList.add("hidden"),["tableViewBtn","chartsViewBtn","holidaysViewBtn","manageViewBtn"].forEach(d=>{const u=document.getElementById(d);u&&(u.classList.remove("bg-indigo-700","text-white"),u.classList.add("bg-gray-700","hover:bg-gray-600"))});const l=document.getElementById(`${e}ViewBtn`);switch(l&&(l.classList.remove("bg-gray-700","hover:bg-gray-600"),l.classList.add("bg-indigo-700","text-white")),e){case"table":document.getElementById("filterControls").classList.remove("hidden"),document.getElementById("dataContainer").classList.remove("hidden"),t&&t.classList.remove("hidden"),n&&n.classList.remove("hidden"),i&&i.classList.remove("hidden"),k();break;case"charts":document.getElementById("filterControls").classList.remove("hidden"),document.getElementById("dataContainer").classList.add("hidden"),document.getElementById("utilizationChartContainer").classList.remove("hidden"),i&&i.classList.remove("hidden"),o&&o.classList.remove("hidden"),K();break;case"holidays":document.getElementById("filterControls").classList.remove("hidden"),document.getElementById("dataContainer").classList.remove("hidden"),t&&t.classList.remove("hidden"),a&&a.classList.remove("hidden"),i&&i.classList.remove("hidden"),R();break;case"manage":document.getElementById("filterControls").classList.add("hidden"),document.getElementById("dataContainer").classList.add("hidden"),document.getElementById("manageTeamMembersSection").classList.remove("hidden"),j(),U();const d=document.getElementById("activityCategoryManagement");d&&d.classList.remove("hidden");break}}async function R(){const e=document.getElementById("dataContainer");if(!e){console.error("Data container not found!");return}e.innerHTML='<p class="text-gray-500 text-center py-8">Loading holiday records...</p>';const t=document.getElementById("filterStartDate").value,n=document.getElementById("filterEndDate").value,a=document.getElementById("filterTeamMember").value,i=document.getElementById("filterHolidayType").value,o=[];t&&o.push(m.lessThanEqual("startDate",n)),n&&o.push(m.greaterThanEqual("endDate",t)),a&&o.push(m.equal("teamMember",a)),i&&o.push(m.equal("holidayType",i)),o.push(m.orderDesc("startDate"));try{const r=await g.listDocuments(v,b.holidays,o);if(r.documents.length===0){e.innerHTML='<p class="text-gray-500 text-center py-8">No holiday/leave records found for the selected filters.</p>',c("No holiday/leave records found for filters.",!1);return}let s=`
            <table class="min-w-full bg-gray-700 rounded-md overflow-hidden text-sm">
                <thead class="bg-gray-600 text-gray-200">
                    <tr>
                        <th class="py-2 px-3 text-left">Member</th>
                        <th class="py-2 px-3 text-left">Start Date</th>
                        <th class="py-2 px-3 text-left">End Date</th>
                        <th class="py-2 px-3 text-left">Type</th>
                        <th class="py-2 px-3 text-left">Reason</th>
                        <th class="py-2 px-3 text-left">Actions</th>
                    </tr>
                </thead>
                <tbody class="text-gray-300">
        `;r.documents.forEach(l=>{var u;const d=((u=M.find(h=>h.$id===l.teamMember))==null?void 0:u.name)||"Unknown";s+=`
                <tr class="border-b border-gray-600 last:border-0">
                    <td class="py-2 px-3">${d}</td>
                    <td class="py-2 px-3">${l.startDate}</td>
                    <td class="py-2 px-3">${l.endDate}</td>
                    <td class="py-2 px-3">${l.holidayType||"Undefined"}</td> 
                    <td class="py-2 px-3">${l.reason||"N/A"}</td>
                    <td class="py-2 px-3 flex flex-col sm:flex-row gap-1">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-holiday-btn"
                                data-id="${l.$id}"
                                data-team-member="${l.teamMember}"
                                data-start-date="${l.startDate}"
                                data-end-date="${l.endDate}"
                                data-type="${l.holidayType||""}"
                                data-reason="${l.reason?l.reason.replace(/"/g,"&quot;"):""}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-holiday-btn"
                                data-id="${l.$id}">Delete</button>
                    </td>
                </tr>
            `}),s+=`
                </tbody>
            </table>
        `,e.innerHTML=s,c(`Displayed ${r.documents.length} holiday records.`,!1)}catch(r){c(`Error displaying holiday records: ${r.message}`,!0),console.error("Error displaying holiday records:",r),e.innerHTML='<p class="text-red-500 text-center py-8">Failed to load holiday records.</p>'}}async function ke(e,t,n,a,i){B("markHolidayBtn","markHolidaySpinner","markHolidayBtnText");const o=D();try{if(!a){c("Error: Holiday type is required.",!0,"modal"),w("markHolidayBtn","markHolidaySpinner","markHolidayBtnText");return}const r=await g.createDocument(v,b.holidays,$.unique(),{userId:o,teamMember:e,startDate:t,endDate:n,holidayType:a,reason:i});c(`Holiday/Leave recorded successfully! Document ID: ${r.$id}`,!1,"modal"),console.log("Recorded Holiday/Leave:",r),document.getElementById("holidayForm").reset(),document.getElementById("holidaysViewBtn").classList.contains("bg-indigo-700")&&await R()}catch(r){c(`Error recording holiday/leave: ${r.message}`,!0,"modal"),console.error("Error recording holiday/leave:",r)}finally{w("markHolidayBtn","markHolidaySpinner","markHolidayBtnText")}}function Ae(e,t,n,a,i,o){A({title:"Update Holiday/Leave",message:"Update details for this holiday/leave record:",inputs:[{id:"modalHolidayTeamMember",label:"Team Member",type:"select",value:t,options:M.map(r=>({value:r.$id,text:r.name})),required:!0},{id:"modalHolidayStartDate",label:"Start Date",type:"date",value:n,required:!0},{id:"modalHolidayEndDate",label:"End Date",type:"date",value:a,required:!0},{id:"modalHolidayType",label:"Type",type:"radio",name:"modalHolidayTypeRadio",value:i,options:[{value:"Holiday",label:"Holiday"},{value:"Leave",label:"Leave"}],required:!0},{id:"modalHolidayReason",label:"Reason",type:"textarea",value:o||"",placeholder:"e.g., Annual vacation",required:!0}],onConfirm:async()=>{var h;const r=document.getElementById("modalHolidayTeamMember").value,s=document.getElementById("modalHolidayStartDate").value,l=document.getElementById("modalHolidayEndDate").value,d=(h=document.querySelector('input[name="modalHolidayTypeRadio"]:checked'))==null?void 0:h.value,u=document.getElementById("modalHolidayReason").value;r&&s&&l&&d&&u?await Ne(e,r,s,l,d,u):c("Please ensure all required fields are valid.",!0,"modal")},onCancel:()=>c("Holiday/Leave update cancelled.",!1)})}async function Ne(e,t,n,a,i,o){const r=D();try{await g.updateDocument(v,b.holidays,e,{userId:r,teamMember:t,startDate:n,endDate:a,holidayType:i,reason:o}),c(`Holiday/Leave record with ID ${e} updated successfully!`,!1,"modal"),await R()}catch(s){c(`Error updating holiday/leave record ${e}: ${s.message}`,!0,"modal"),console.error("Error updating holiday/leave record:",s)}}async function qe(){B("deleteAllHolidayRecordsBtn","deleteAllHolidayRecordsSpinner","deleteAllHolidayRecordsBtnText");try{const e=await g.listDocuments(v,b.holidays,[m.limit(100)]);if(e.documents.length===0){c("No holiday records to delete.",!1,"modal");return}for(const t of e.documents)await g.deleteDocument(v,b.holidays,t.$id);c(`Successfully deleted ${e.documents.length} holiday records.`,!1,"modal"),await R()}catch(e){c(`Error deleting all holiday records: ${e.message}`,!0,"modal"),console.error("Error deleting all holiday records:",e)}finally{w("deleteAllHolidayRecordsBtn","deleteAllHolidayRecordsSpinner","deleteAllHolidayRecordsBtnText")}}document.addEventListener("DOMContentLoaded",async()=>{var l,d,u,h,T,N,V,z,W;const e=document.getElementById("dataContainer");e&&e.addEventListener("click",y=>{const p=y.target;if(p.classList.contains("edit-time-entry-btn")){const f=p.dataset;$e(f.id,f.date,f.teamMember,f.activity,f.ticketNumber,parseFloat(f.hoursSpent),f.notes)}else if(p.classList.contains("delete-time-entry-btn")){const f=p.dataset.id;He(f)}else if(p.classList.contains("edit-holiday-btn")){const f=p.dataset;Ae(f.id,f.teamMember,f.startDate,f.endDate,f.type,f.reason)}else if(p.classList.contains("delete-holiday-btn")){const f=p.dataset.id;deleteHoliday(f)}});const t=document.getElementById("timeTrackForm");t&&t.addEventListener("submit",y=>{y.preventDefault();const p=document.getElementById("teamMemberTime").value,f=document.getElementById("activity").value,E=document.getElementById("ticketNumber").value,L=parseFloat(document.getElementById("hoursSpent").value),H=document.getElementById("trackDate").value,q=document.getElementById("notes").value;p&&f&&!isNaN(L)&&L>0&&H?Ie(p,f,E,L,H,q):c("Please fill all required fields for time log.",!0,"modal")});const n=document.getElementById("holidayForm");n&&n.addEventListener("submit",y=>{y.preventDefault();const p=document.getElementById("teamMemberHoliday").value,f=document.getElementById("holidayStartDate").value,E=document.getElementById("holidayEndDate").value,L=document.querySelector('input[name="holidayType"]:checked'),H=L?L.value:"",q=document.getElementById("holidayReason").value;p&&f&&E&&H&&q?ke(p,f,E,H,q):c("Please fill all required fields for holiday/leave, including selecting a type.",!0,"modal")});const a=document.getElementById("addTeamMemberForm");a&&a.addEventListener("submit",async y=>{y.preventDefault();const p=document.getElementById("newTeamMemberName").value,f=parseFloat(document.getElementById("newTeamMemberHours").value),E=D();p&&!isNaN(f)&&f>=0?await he(p,f,E):c("Please enter valid name and daily work hours.",!0,"modal")});const i=document.getElementById("addActivityCategoryForm");i&&i.addEventListener("submit",async y=>{y.preventDefault();const p=document.getElementById("newActivityCategoryName").value,f=D();p?await we(p,f):c("Please enter an activity category name.",!0,"modal")});const o=document.getElementById("applyFiltersBtn");o&&o.addEventListener("click",()=>{var p;const y=(p=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:p.id;y==="tableViewBtn"?k():y==="holidaysViewBtn"?R():y==="chartsViewBtn"&&K()});const r=document.getElementById("resetFiltersBtn");r&&r.addEventListener("click",()=>{var p;document.getElementById("filterStartDate").value="",document.getElementById("filterEndDate").value="",document.getElementById("filterTeamMember").value="",document.getElementById("filterActivity").value="",document.getElementById("filterHolidayType").value="";const y=(p=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:p.id;y==="tableViewBtn"?k():y==="holidaysViewBtn"?R():y==="chartsViewBtn"&&K()});const s=document.getElementById("refreshDataBtn");s&&s.addEventListener("click",async()=>{var y;B("refreshDataBtn","refreshDataSpinner","refreshDataBtnText");try{const p=(y=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:y.id;p==="tableViewBtn"?await k():p==="holidaysViewBtn"?await R():p==="chartsViewBtn"?await K(g):p==="manageViewBtn"&&(await j(),await U()),c("Data refreshed successfully!",!1)}catch(p){c(`Error refreshing data: ${p.message}`,!0),console.error("Refresh error:",p)}finally{w("refreshDataBtn","refreshDataSpinner","refreshDataBtnText")}}),(l=document.getElementById("tableViewBtn"))==null||l.addEventListener("click",()=>P("table")),(d=document.getElementById("chartsViewBtn"))==null||d.addEventListener("click",()=>P("charts")),(u=document.getElementById("holidaysViewBtn"))==null||u.addEventListener("click",()=>P("holidays")),(h=document.getElementById("manageViewBtn"))==null||h.addEventListener("click",()=>P("manage")),(T=document.getElementById("deleteAllTimeEntriesBtn"))==null||T.addEventListener("click",Ce),(N=document.getElementById("deleteAllHolidayRecordsBtn"))==null||N.addEventListener("click",qe),(V=document.getElementById("deleteAllTeamMembersBtn"))==null||V.addEventListener("click",ve),(z=document.getElementById("deleteAllActivityCategoriesBtn"))==null||z.addEventListener("click",Be),(W=document.getElementById("exportDataBtn"))==null||W.addEventListener("click",Me),D(),await j(),await U(),P("table")});function Re(e){const t=e.split(","),n=t[0].match(/:(.*?);/)[1],a=atob(t[1]);let i=a.length;const o=new Uint8Array(i);for(;i--;)o[i]=a.charCodeAt(i);return new Blob([o],{type:n})}async function je(e,t,n,a){B(t,a,n);const i=document.getElementById(e);if(!i){c(`Error: Element with ID '${e}' not found for copying.`,!0,"modal"),w(t,a,n);return}try{(await html2canvas(i,{scale:2,backgroundColor:"#1a1a1c",useCORS:!0})).toBlob(async r=>{if(!r){c("Failed to create image blob from canvas.",!0,"modal"),w(t,a,n);return}if(navigator.clipboard&&navigator.clipboard.write){const s=new ClipboardItem({"image/png":r});try{await navigator.clipboard.write([s]),c("Table image copied to clipboard!",!1,"modal"),console.log("Table image copied to clipboard!")}catch(l){c(`Failed to copy table image to clipboard: ${l.message}`,!0,"modal"),console.error("Failed to copy table image:",l)}}else c("Clipboard API not supported or restricted by browser. Please try manually copying.",!0,"modal"),console.warn("Clipboard API not supported or restricted.");w(t,a,n)},"image/png")}catch(o){c(`Error rendering element to image: ${o.message}`,!0,"modal"),console.error("Error rendering HTML element to image:",o),w(t,a,n)}}async function Ue(e,t,n,a){B(t,a,n);const i=document.getElementById(e);if(!i||!(i instanceof HTMLCanvasElement)){c(`Error: Canvas element with ID '${e}' not found or is not a canvas.`,!0,"modal"),w(t,a,n);return}try{const o=i.toDataURL("image/png",1),r=Re(o);if(navigator.clipboard&&navigator.clipboard.write){const s=new ClipboardItem({"image/png":r});try{await navigator.clipboard.write([s]),c("Graph image copied to clipboard!",!1,"modal"),console.log("Graph image copied to clipboard!")}catch(l){c(`Failed to copy graph image to clipboard: ${l.message}`,!0,"modal"),console.error("Failed to copy graph image:",l)}}else c("Clipboard API not supported or restricted by browser. Please try manually copying.",!0,"modal"),console.warn("Clipboard API not supported or restricted.")}catch(o){c(`Error copying chart image: ${o.message}`,!0,"modal"),console.error("Error copying chart image:",o)}finally{w(t,a,n)}}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("copyTableBtn"),t=document.getElementById("copyChartBtn");e?e.addEventListener("click",()=>{je("dataContainer","copyTableBtn","copyTableBtnText","copyTableSpinner")}):console.warn("Copy Table button not found."),t?t.addEventListener("click",()=>{Ue("utilizationChart","copyChartBtn","copyChartBtnText","copyChartSpinner")}):console.warn("Copy Chart button not found.")});
