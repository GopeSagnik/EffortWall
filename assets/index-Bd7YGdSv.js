(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function a(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=a(i);fetch(i.href,o)}})();function R(e,t,a,n){function i(o){return o instanceof a?o:new a(function(s){s(o)})}return new(a||(a=Promise))(function(o,s){function l(u){try{r(n.next(u))}catch(f){s(f)}}function d(u){try{r(n.throw(u))}catch(f){s(f)}}function r(u){u.done?o(u.value):i(u.value).then(l,d)}r((n=n.apply(e,[])).next())})}function we(e,t,a,n){if(typeof t=="function"?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?n:a==="a"?n.call(e):n?n.value:t.get(e)}class c{constructor(t,a,n){this.method=t,this.attribute=a,n!==void 0&&(Array.isArray(n)?this.values=n:this.values=[n])}toString(){return JSON.stringify({method:this.method,attribute:this.attribute,values:this.values})}}c.equal=(e,t)=>new c("equal",e,t).toString();c.notEqual=(e,t)=>new c("notEqual",e,t).toString();c.lessThan=(e,t)=>new c("lessThan",e,t).toString();c.lessThanEqual=(e,t)=>new c("lessThanEqual",e,t).toString();c.greaterThan=(e,t)=>new c("greaterThan",e,t).toString();c.greaterThanEqual=(e,t)=>new c("greaterThanEqual",e,t).toString();c.isNull=e=>new c("isNull",e).toString();c.isNotNull=e=>new c("isNotNull",e).toString();c.between=(e,t,a)=>new c("between",e,[t,a]).toString();c.startsWith=(e,t)=>new c("startsWith",e,t).toString();c.endsWith=(e,t)=>new c("endsWith",e,t).toString();c.select=e=>new c("select",void 0,e).toString();c.search=(e,t)=>new c("search",e,t).toString();c.orderDesc=e=>new c("orderDesc",e).toString();c.orderAsc=e=>new c("orderAsc",e).toString();c.cursorAfter=e=>new c("cursorAfter",void 0,e).toString();c.cursorBefore=e=>new c("cursorBefore",void 0,e).toString();c.limit=e=>new c("limit",void 0,e).toString();c.offset=e=>new c("offset",void 0,e).toString();c.contains=(e,t)=>new c("contains",e,t).toString();c.or=e=>new c("or",void 0,e.map(t=>JSON.parse(t))).toString();c.and=e=>new c("and",void 0,e.map(t=>JSON.parse(t))).toString();class x extends Error{constructor(t,a=0,n="",i=""){super(t),this.name="AppwriteException",this.message=t,this.code=a,this.type=n,this.response=i}}class N{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"17.0.0","X-Appwrite-Response-Format":"1.6.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=window==null?void 0:window.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=window==null?void 0:window.setInterval(()=>{var t;(t=this.realtime.socket)===null||t===void 0||t.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var t,a,n;if(this.realtime.channels.size<1){this.realtime.reconnect=!1,(t=this.realtime.socket)===null||t===void 0||t.close();return}const i=new URLSearchParams;i.set("project",this.config.project),this.realtime.channels.forEach(s=>{i.append("channels[]",s)});const o=this.config.endpointRealtime+"/realtime?"+i.toString();(o!==this.realtime.url||!this.realtime.socket||((a=this.realtime.socket)===null||a===void 0?void 0:a.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&((n=this.realtime.socket)===null||n===void 0?void 0:n.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=o,this.realtime.socket=new WebSocket(o),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",s=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",s=>{var l,d,r;if(!this.realtime.reconnect||((d=(l=this.realtime)===null||l===void 0?void 0:l.lastMessage)===null||d===void 0?void 0:d.type)==="error"&&((r=this.realtime)===null||r===void 0?void 0:r.lastMessage.data).code===1008){this.realtime.reconnect=!0;return}const u=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${u/1e3} seconds.`,s.reason),setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},u)}))},onMessage:t=>{var a,n;try{const i=JSON.parse(t.data);switch(this.realtime.lastMessage=i,i.type){case"connected":const o=JSON.parse((a=window.localStorage.getItem("cookieFallback"))!==null&&a!==void 0?a:"{}"),s=o==null?void 0:o[`a_session_${this.config.project}`],l=i.data;s&&!l.user&&((n=this.realtime.socket)===null||n===void 0||n.send(JSON.stringify({type:"authentication",data:{session:s}})));break;case"event":let d=i.data;if(d!=null&&d.channels){if(!d.channels.some(u=>this.realtime.channels.has(u)))return;this.realtime.subscriptions.forEach(u=>{d.channels.some(f=>u.channels.includes(f))&&setTimeout(()=>u.callback(d))})}break;case"pong":break;case"error":throw i.data;default:break}}catch(i){console.error(i)}},cleanUp:t=>{this.realtime.channels.forEach(a=>{t.includes(a)&&(Array.from(this.realtime.subscriptions).some(([i,o])=>o.channels.includes(a))||this.realtime.channels.delete(a))})}}}setEndpoint(t){return this.config.endpoint=t,this.config.endpointRealtime=this.config.endpointRealtime||this.config.endpoint.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(t){return this.config.endpointRealtime=t,this}setProject(t){return this.headers["X-Appwrite-Project"]=t,this.config.project=t,this}setJWT(t){return this.headers["X-Appwrite-JWT"]=t,this.config.jwt=t,this}setLocale(t){return this.headers["X-Appwrite-Locale"]=t,this.config.locale=t,this}setSession(t){return this.headers["X-Appwrite-Session"]=t,this.config.session=t,this}subscribe(t,a){let n=typeof t=="string"?[t]:t;n.forEach(o=>this.realtime.channels.add(o));const i=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(i,{channels:n,callback:a}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(i),this.realtime.cleanUp(n),this.realtime.connect()}}prepareRequest(t,a,n={},i={}){if(t=t.toUpperCase(),n=Object.assign({},this.headers,n),typeof window<"u"&&window.localStorage){const s=window.localStorage.getItem("cookieFallback");s&&(n["X-Fallback-Cookies"]=s)}let o={method:t,headers:n,credentials:"include"};if(t==="GET")for(const[s,l]of Object.entries(N.flatten(i)))a.searchParams.append(s,l);else switch(n["content-type"]){case"application/json":o.body=JSON.stringify(i);break;case"multipart/form-data":const s=new FormData;for(const[l,d]of Object.entries(i))if(d instanceof File)s.append(l,d,d.name);else if(Array.isArray(d))for(const r of d)s.append(`${l}[]`,r);else s.append(l,d);o.body=s,delete n["content-type"];break}return{uri:a.toString(),options:o}}chunkedUpload(t,a,n={},i={},o){return R(this,void 0,void 0,function*(){const s=Object.values(i).find(r=>r instanceof File);if(s.size<=N.CHUNK_SIZE)return yield this.call(t,a,n,i);let l=0,d=null;for(;l<s.size;){let r=l+N.CHUNK_SIZE;r>=s.size&&(r=s.size),n["content-range"]=`bytes ${l}-${r-1}/${s.size}`;const u=s.slice(l,r);let f=Object.assign(Object.assign({},i),{file:new File([u],s.name)});d=yield this.call(t,a,n,f),o&&typeof o=="function"&&o({$id:d.$id,progress:Math.round(r/s.size*100),sizeUploaded:r,chunksTotal:Math.ceil(s.size/N.CHUNK_SIZE),chunksUploaded:Math.ceil(r/N.CHUNK_SIZE)}),d&&d.$id&&(n["x-appwrite-id"]=d.$id),l=r}return d})}ping(){return R(this,void 0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(t,a,n={},i={},o="json"){var s;return R(this,void 0,void 0,function*(){const{uri:l,options:d}=this.prepareRequest(t,a,n,i);let r=null;const u=yield fetch(l,d),f=u.headers.get("x-appwrite-warning");if(f&&f.split(";").forEach(M=>console.warn("Warning: "+M)),!((s=u.headers.get("content-type"))===null||s===void 0)&&s.includes("application/json")?r=yield u.json():o==="arrayBuffer"?r=yield u.arrayBuffer():r={message:yield u.text()},400<=u.status)throw new x(r==null?void 0:r.message,u.status,r==null?void 0:r.type,r);const T=u.headers.get("X-Fallback-Cookies");return typeof window<"u"&&window.localStorage&&T&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",T)),r})}static flatten(t,a=""){let n={};for(const[i,o]of Object.entries(t)){let s=a?a+"["+i+"]":i;Array.isArray(o)?n=Object.assign(Object.assign({},n),N.flatten(o,s)):n[s]=o}return n}}N.CHUNK_SIZE=1024*1024*5;class Ee{constructor(t){this.client=t}listDocuments(t,a,n){return R(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof a>"u")throw new x('Missing required parameter: "collectionId"');const i="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",t).replace("{collectionId}",a),o={};typeof n<"u"&&(o.queries=n);const s=new URL(this.client.config.endpoint+i),l={"content-type":"application/json"};return yield this.client.call("get",s,l,o)})}createDocument(t,a,n,i,o){return R(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof a>"u")throw new x('Missing required parameter: "collectionId"');if(typeof n>"u")throw new x('Missing required parameter: "documentId"');if(typeof i>"u")throw new x('Missing required parameter: "data"');const s="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",t).replace("{collectionId}",a),l={};typeof n<"u"&&(l.documentId=n),typeof i<"u"&&(l.data=i),typeof o<"u"&&(l.permissions=o);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return yield this.client.call("post",d,r,l)})}getDocument(t,a,n,i){return R(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof a>"u")throw new x('Missing required parameter: "collectionId"');if(typeof n>"u")throw new x('Missing required parameter: "documentId"');const o="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",t).replace("{collectionId}",a).replace("{documentId}",n),s={};typeof i<"u"&&(s.queries=i);const l=new URL(this.client.config.endpoint+o),d={"content-type":"application/json"};return yield this.client.call("get",l,d,s)})}updateDocument(t,a,n,i,o){return R(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof a>"u")throw new x('Missing required parameter: "collectionId"');if(typeof n>"u")throw new x('Missing required parameter: "documentId"');const s="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",t).replace("{collectionId}",a).replace("{documentId}",n),l={};typeof i<"u"&&(l.data=i),typeof o<"u"&&(l.permissions=o);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return yield this.client.call("patch",d,r,l)})}deleteDocument(t,a,n){return R(this,void 0,void 0,function*(){if(typeof t>"u")throw new x('Missing required parameter: "databaseId"');if(typeof a>"u")throw new x('Missing required parameter: "collectionId"');if(typeof n>"u")throw new x('Missing required parameter: "documentId"');const i="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",t).replace("{collectionId}",a).replace("{documentId}",n),o={},s=new URL(this.client.config.endpoint+i),l={"content-type":"application/json"};return yield this.client.call("delete",s,l,o)})}}class S{}S.read=e=>`read("${e}")`;S.write=e=>`write("${e}")`;S.create=e=>`create("${e}")`;S.update=e=>`update("${e}")`;S.delete=e=>`delete("${e}")`;class z{static any(){return"any"}static user(t,a=""){return a===""?`user:${t}`:`user:${t}/${a}`}static users(t=""){return t===""?"users":`users/${t}`}static guests(){return"guests"}static team(t,a=""){return a===""?`team:${t}`:`team:${t}/${a}`}static member(t){return`member:${t}`}static label(t){return`label:${t}`}}var ye,pe;class j{static custom(t){return t}static unique(t=7){const a=we(j,ye,"m",pe).call(j);let n="";for(let i=0;i<t;i++){const o=Math.floor(Math.random()*16).toString(16);n+=o}return a+n}}ye=j,pe=function(){const t=new Date,a=Math.floor(t.getTime()/1e3),n=t.getMilliseconds();return a.toString(16)+n.toString(16).padStart(5,"0")};var ae;(function(e){e.Totp="totp"})(ae||(ae={}));var ne;(function(e){e.Email="email",e.Phone="phone",e.Totp="totp",e.Recoverycode="recoverycode"})(ne||(ne={}));var ie;(function(e){e.Amazon="amazon",e.Apple="apple",e.Auth0="auth0",e.Authentik="authentik",e.Autodesk="autodesk",e.Bitbucket="bitbucket",e.Bitly="bitly",e.Box="box",e.Dailymotion="dailymotion",e.Discord="discord",e.Disqus="disqus",e.Dropbox="dropbox",e.Etsy="etsy",e.Facebook="facebook",e.Github="github",e.Gitlab="gitlab",e.Google="google",e.Linkedin="linkedin",e.Microsoft="microsoft",e.Notion="notion",e.Oidc="oidc",e.Okta="okta",e.Paypal="paypal",e.PaypalSandbox="paypalSandbox",e.Podio="podio",e.Salesforce="salesforce",e.Slack="slack",e.Spotify="spotify",e.Stripe="stripe",e.Tradeshift="tradeshift",e.TradeshiftBox="tradeshiftBox",e.Twitch="twitch",e.Wordpress="wordpress",e.Yahoo="yahoo",e.Yammer="yammer",e.Yandex="yandex",e.Zoho="zoho",e.Zoom="zoom",e.Mock="mock"})(ie||(ie={}));var oe;(function(e){e.AvantBrowser="aa",e.AndroidWebViewBeta="an",e.GoogleChrome="ch",e.GoogleChromeIOS="ci",e.GoogleChromeMobile="cm",e.Chromium="cr",e.MozillaFirefox="ff",e.Safari="sf",e.MobileSafari="mf",e.MicrosoftEdge="ps",e.MicrosoftEdgeIOS="oi",e.OperaMini="om",e.Opera="op",e.OperaNext="on"})(oe||(oe={}));var re;(function(e){e.AmericanExpress="amex",e.Argencard="argencard",e.Cabal="cabal",e.Cencosud="cencosud",e.DinersClub="diners",e.Discover="discover",e.Elo="elo",e.Hipercard="hipercard",e.JCB="jcb",e.Mastercard="mastercard",e.Naranja="naranja",e.TarjetaShopping="targeta-shopping",e.UnionChinaPay="union-china-pay",e.Visa="visa",e.MIR="mir",e.Maestro="maestro"})(re||(re={}));var se;(function(e){e.Afghanistan="af",e.Angola="ao",e.Albania="al",e.Andorra="ad",e.UnitedArabEmirates="ae",e.Argentina="ar",e.Armenia="am",e.AntiguaAndBarbuda="ag",e.Australia="au",e.Austria="at",e.Azerbaijan="az",e.Burundi="bi",e.Belgium="be",e.Benin="bj",e.BurkinaFaso="bf",e.Bangladesh="bd",e.Bulgaria="bg",e.Bahrain="bh",e.Bahamas="bs",e.BosniaAndHerzegovina="ba",e.Belarus="by",e.Belize="bz",e.Bolivia="bo",e.Brazil="br",e.Barbados="bb",e.BruneiDarussalam="bn",e.Bhutan="bt",e.Botswana="bw",e.CentralAfricanRepublic="cf",e.Canada="ca",e.Switzerland="ch",e.Chile="cl",e.China="cn",e.CoteDIvoire="ci",e.Cameroon="cm",e.DemocraticRepublicOfTheCongo="cd",e.RepublicOfTheCongo="cg",e.Colombia="co",e.Comoros="km",e.CapeVerde="cv",e.CostaRica="cr",e.Cuba="cu",e.Cyprus="cy",e.CzechRepublic="cz",e.Germany="de",e.Djibouti="dj",e.Dominica="dm",e.Denmark="dk",e.DominicanRepublic="do",e.Algeria="dz",e.Ecuador="ec",e.Egypt="eg",e.Eritrea="er",e.Spain="es",e.Estonia="ee",e.Ethiopia="et",e.Finland="fi",e.Fiji="fj",e.France="fr",e.MicronesiaFederatedStatesOf="fm",e.Gabon="ga",e.UnitedKingdom="gb",e.Georgia="ge",e.Ghana="gh",e.Guinea="gn",e.Gambia="gm",e.GuineaBissau="gw",e.EquatorialGuinea="gq",e.Greece="gr",e.Grenada="gd",e.Guatemala="gt",e.Guyana="gy",e.Honduras="hn",e.Croatia="hr",e.Haiti="ht",e.Hungary="hu",e.Indonesia="id",e.India="in",e.Ireland="ie",e.IranIslamicRepublicOf="ir",e.Iraq="iq",e.Iceland="is",e.Israel="il",e.Italy="it",e.Jamaica="jm",e.Jordan="jo",e.Japan="jp",e.Kazakhstan="kz",e.Kenya="ke",e.Kyrgyzstan="kg",e.Cambodia="kh",e.Kiribati="ki",e.SaintKittsAndNevis="kn",e.SouthKorea="kr",e.Kuwait="kw",e.LaoPeopleSDemocraticRepublic="la",e.Lebanon="lb",e.Liberia="lr",e.Libya="ly",e.SaintLucia="lc",e.Liechtenstein="li",e.SriLanka="lk",e.Lesotho="ls",e.Lithuania="lt",e.Luxembourg="lu",e.Latvia="lv",e.Morocco="ma",e.Monaco="mc",e.Moldova="md",e.Madagascar="mg",e.Maldives="mv",e.Mexico="mx",e.MarshallIslands="mh",e.NorthMacedonia="mk",e.Mali="ml",e.Malta="mt",e.Myanmar="mm",e.Montenegro="me",e.Mongolia="mn",e.Mozambique="mz",e.Mauritania="mr",e.Mauritius="mu",e.Malawi="mw",e.Malaysia="my",e.Namibia="na",e.Niger="ne",e.Nigeria="ng",e.Nicaragua="ni",e.Netherlands="nl",e.Norway="no",e.Nepal="np",e.Nauru="nr",e.NewZealand="nz",e.Oman="om",e.Pakistan="pk",e.Panama="pa",e.Peru="pe",e.Philippines="ph",e.Palau="pw",e.PapuaNewGuinea="pg",e.Poland="pl",e.FrenchPolynesia="pf",e.NorthKorea="kp",e.Portugal="pt",e.Paraguay="py",e.Qatar="qa",e.Romania="ro",e.Russia="ru",e.Rwanda="rw",e.SaudiArabia="sa",e.Sudan="sd",e.Senegal="sn",e.Singapore="sg",e.SolomonIslands="sb",e.SierraLeone="sl",e.ElSalvador="sv",e.SanMarino="sm",e.Somalia="so",e.Serbia="rs",e.SouthSudan="ss",e.SaoTomeAndPrincipe="st",e.Suriname="sr",e.Slovakia="sk",e.Slovenia="si",e.Sweden="se",e.Eswatini="sz",e.Seychelles="sc",e.Syria="sy",e.Chad="td",e.Togo="tg",e.Thailand="th",e.Tajikistan="tj",e.Turkmenistan="tm",e.TimorLeste="tl",e.Tonga="to",e.TrinidadAndTobago="tt",e.Tunisia="tn",e.Turkey="tr",e.Tuvalu="tv",e.Tanzania="tz",e.Uganda="ug",e.Ukraine="ua",e.Uruguay="uy",e.UnitedStates="us",e.Uzbekistan="uz",e.VaticanCity="va",e.SaintVincentAndTheGrenadines="vc",e.Venezuela="ve",e.Vietnam="vn",e.Vanuatu="vu",e.Samoa="ws",e.Yemen="ye",e.SouthAfrica="za",e.Zambia="zm",e.Zimbabwe="zw"})(se||(se={}));var le;(function(e){e.GET="GET",e.POST="POST",e.PUT="PUT",e.PATCH="PATCH",e.DELETE="DELETE",e.OPTIONS="OPTIONS"})(le||(le={}));var de;(function(e){e.Center="center",e.Topleft="top-left",e.Top="top",e.Topright="top-right",e.Left="left",e.Right="right",e.Bottomleft="bottom-left",e.Bottom="bottom",e.Bottomright="bottom-right"})(de||(de={}));var ce;(function(e){e.Jpg="jpg",e.Jpeg="jpeg",e.Gif="gif",e.Png="png",e.Webp="webp",e.Heic="heic",e.Avif="avif"})(ce||(ce={}));async function Te(e,t,a){C("addTeamMemberBtn","addTeamMemberSpinner","addTeamMemberBtnText");try{const n=await b.createDocument(g,v.teamMembers,j.unique(),{userId:a,name:e,dailyHours:t},[S.read(z.user(a)),S.write(z.user(a))]);m(`Team member ${e} added successfully!`,!1,"modal"),document.getElementById("addTeamMemberForm").reset(),await W()}catch(n){m(`Error adding team member: ${n.message}`,!0,"modal"),console.error("Error adding team member:",n)}finally{B("addTeamMemberBtn","addTeamMemberSpinner","addTeamMemberBtnText")}}async function W(){const e=document.getElementById("teamMemberTime"),t=document.getElementById("teamMemberHoliday"),a=document.getElementById("filterTeamMember"),n=document.getElementById("teamMemberList");e&&(e.innerHTML='<option value="">Select Team Member</option>'),t&&(t.innerHTML='<option value="">Select Team Member</option>'),a&&(a.innerHTML='<option value="">All Team Members</option>'),n&&(n.innerHTML='<p class="text-gray-500 text-center py-4">Loading team members...</p>');const i=getOrCreateGuestUserId();try{const o=await b.listDocuments(g,v.teamMembers,[c.equal("userId",i),c.limit(100)]);if(Ae(o.documents),o.documents.length===0){n&&(n.innerHTML='<p class="text-gray-500 text-center py-4">No team members added yet.</p>');return}let s="";o.documents.forEach(d=>{const r=`<option value="${d.$id}">${d.name}</option>`;e&&(e.innerHTML+=r),t&&(t.innerHTML+=r),a&&(a.innerHTML+=r),s+=`
                <div class="flex justify-between items-center bg-gray-600 p-2 rounded-md shadow-sm">
                    <span class="text-gray-200">${d.name} (${d.dailyHours} hrs/day)</span>
                    <div class="flex space-x-2">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-team-member-btn"
                                data-id="${d.$id}" data-name="${d.name}" data-daily-hours="${d.dailyHours}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-team-member-btn"
                                data-id="${d.$id}">Delete</button>
                    </div>
                </div>
            `}),n&&(n.innerHTML=s);const l=document.getElementById("manageTeamMembersSection");l&&(l.removeEventListener("click",me),l.addEventListener("click",me))}catch(o){m(`Error listing team members: ${o.message}`,!0),console.error("Error listing team members:",o),n&&(n.innerHTML='<p class="text-red-500 text-center py-4">Failed to load team members.</p>')}}function me(e){const t=e.target;if(t.classList.contains("edit-team-member-btn")){const a=t.dataset;xe(a.id,a.name,parseFloat(a.dailyHours))}else if(t.classList.contains("delete-team-member-btn")){const a=t.dataset.id;fe(a)}}function xe(e,t,a){P({title:"Update Team Member",message:"Update the team member's details:",inputs:[{id:"modalTeamMemberName",label:"Name",type:"text",value:t,required:!0},{id:"modalTeamMemberHours",label:"Daily Work Hours",type:"number",value:a,step:"0.5",min:"0",required:!0}],onConfirm:async()=>{const n=document.getElementById("modalTeamMemberName").value,i=parseFloat(document.getElementById("modalTeamMemberHours").value);n&&!isNaN(i)&&i>=0?await Be(e,n,i):m("Please enter valid name and daily work hours.",!0,"modal")},onCancel:()=>m("Team member update cancelled.",!1)})}async function Be(e,t,a){const n=getOrCreateGuestUserId();try{await b.updateDocument(g,v.teamMembers,e,{userId:n,name:t,dailyHours:a}),m(`Team member ${t} updated successfully!`,!1,"modal"),await W()}catch(i){m(`Error updating team member ${t}: ${i.message}`,!0,"modal"),console.error("Error updating team member:",i)}}async function fe(e){P({title:"Confirm Deletion",message:`Are you sure you want to delete this team member (ID: ${e})? This will also remove their associated time entries and holidays. This action cannot be undone.`,isError:!0,showCancel:!0,onConfirm:async()=>{var a;const t=getOrCreateGuestUserId();try{const n=await b.listDocuments(g,v.timeEntries,[c.equal("teamMember",e),c.equal("userId",t),c.limit(100)]);for(const s of n.documents)await b.deleteDocument(g,v.timeEntries,s.$id);m(`Deleted ${n.documents.length} associated time entries.`,!1);const i=await b.listDocuments(g,v.holidays,[c.equal("teamMember",e),c.equal("userId",t),c.limit(100)]);for(const s of i.documents)await b.deleteDocument(g,v.holidays,s.$id);m(`Deleted ${i.documents.length} associated holiday records.`,!1),await b.deleteDocument(g,v.teamMembers,e),m("Team member deleted successfully!",!1,"modal"),await W();const o=(a=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:a.id;o==="tableViewBtn"?await displayFilteredTimeEntries():o==="holidaysViewBtn"&&await displayHolidays()}catch(n){m(`Error deleting team member: ${n.message}`,!0,"modal"),console.error("Error deleting team member:",n)}},onCancel:()=>m("Team member deletion cancelled.",!1)})}async function Ie(){C("deleteAllTeamMembersBtn","deleteAllTeamMembersSpinner","deleteAllTeamMembersBtnText");const e=getOrCreateGuestUserId();try{const t=await b.listDocuments(g,v.teamMembers,[c.equal("userId",e),c.limit(100)]);if(t.documents.length===0){m("No team members to delete.",!1,"modal");return}for(const a of t.documents)await fe(a.$id);m(`Successfully deleted ${t.documents.length} team members and their associated data.`,!1,"modal"),await W()}catch(t){m(`Error deleting all team members: ${t.message}`,!0,"modal"),console.error("Error deleting all team members:",t)}finally{B("deleteAllTeamMembersBtn","deleteAllTeamMembersSpinner","deleteAllTeamMembersBtnText")}}async function $e(e,t){C("addActivityCategoryBtn","addActivityCategorySpinner","addActivityCategoryBtnText");try{const a=await b.createDocument(g,v.activityCategories,j.unique(),{userId:t,name:e},[S.read(z.user(t)),S.write(z.user(t))]);m(`Activity category "${e}" added successfully!`,!1,"modal"),document.getElementById("addActivityCategoryForm").reset(),await _()}catch(a){m(`Error adding activity category: ${a.message}`,!0,"modal"),console.error("Error adding activity category:",a)}finally{B("addActivityCategoryBtn","addActivityCategorySpinner","addActivityCategoryBtnText")}}async function _(){const e=document.getElementById("activity"),t=document.getElementById("filterActivity"),a=document.getElementById("activityCategoryList");e&&(e.innerHTML='<option value="">Select Activity</option>'),t&&(t.innerHTML='<option value="">All Activities</option>'),a&&(a.innerHTML='<p class="text-gray-500 text-center py-4">Loading categories...</p>');const n=getOrCreateGuestUserId();try{const i=await b.listDocuments(g,v.activityCategories,[c.equal("userId",n),c.limit(100)]);if(He(i.documents),i.documents.length===0){a&&(a.innerHTML='<p class="text-gray-500 text-center py-4">No categories added yet.</p>');return}let o="";i.documents.forEach(l=>{const d=`<option value="${l.name}">${l.name}</option>`;e&&(e.innerHTML+=d),t&&(t.innerHTML+=d),o+=`
                <div class="flex justify-between items-center bg-gray-600 p-2 rounded-md shadow-sm">
                    <span class="text-gray-200">${l.name}</span>
                    <div class="flex space-x-2">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-activity-category-btn"
                                data-id="${l.$id}" data-name="${l.name}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-activity-category-btn"
                                data-id="${l.$id}">Delete</button>
                    </div>
                </div>
            `}),a&&(a.innerHTML=o);const s=document.getElementById("activityCategoryManagement");s&&(s.removeEventListener("click",ue),s.addEventListener("click",ue))}catch(i){m(`Error listing activity categories: ${i.message}`,!0),console.error("Error listing activity categories:",i),a&&(a.innerHTML='<p class="text-red-500 text-center py-4">Failed to load categories.</p>')}}function ue(e){const t=e.target;if(t.classList.contains("edit-activity-category-btn")){const a=t.dataset;Me(a.id,a.name)}else if(t.classList.contains("delete-activity-category-btn")){const a=t.dataset.id;Se(a)}}function Me(e,t){P({title:"Update Activity Category",message:"Update the activity category name:",inputs:[{id:"modalActivityCategoryName",label:"Category Name",type:"text",value:t,required:!0}],onConfirm:async()=>{const a=document.getElementById("modalActivityCategoryName").value;a?await De(e,a):m("Please enter a category name.",!0,"modal")},onCancel:()=>m("Activity category update cancelled.",!1)})}async function De(e,t){const a=getOrCreateGuestUserId();try{await b.updateDocument(g,v.activityCategories,e,{userId:a,name:t}),m(`Activity category "${t}" updated successfully!`,!1,"modal"),await _()}catch(n){m(`Error updating activity category "${t}": ${n.message}`,!0,"modal"),console.error("Error updating activity category:",n)}}async function Se(e){P({title:"Confirm Deletion",message:`Are you sure you want to delete this activity category (ID: ${e})? This action cannot be undone.`,isError:!0,showCancel:!0,onConfirm:async()=>{try{await b.deleteDocument(g,v.activityCategories,e),m("Activity category deleted successfully!",!1,"modal"),await _()}catch(t){m(`Error deleting activity category: ${t.message}`,!0,"modal"),console.error("Error deleting activity category:",t)}},onCancel:()=>m("Deletion cancelled.",!1)})}async function Le(){C("deleteAllActivityCategoriesBtn","deleteAllActivityCategoriesSpinner","deleteAllActivityCategoriesBtnText");const e=getOrCreateGuestUserId();try{const t=await b.listDocuments(g,v.activityCategories,[c.equal("userId",e),c.limit(100)]);if(t.documents.length===0){m("No activity categories to delete.",!1,"modal");return}for(const a of t.documents)await b.deleteDocument(g,v.activityCategories,a.$id);m(`Successfully deleted ${t.documents.length} activity categories.`,!1,"modal"),await _()}catch(t){m(`Error deleting all activity categories: ${t.message}`,!0,"modal"),console.error("Error deleting all activity categories:",t)}finally{B("deleteAllActivityCategoriesBtn","deleteAllActivityCategoriesSpinner","deleteAllActivityCategoriesBtnText")}}console.log("chartModule.js loaded.");console.log("Chart object (should be defined):",typeof Chart);console.log("databases object (expected undefined at top-level, passed as arg):",typeof databases);typeof Chart<"u"&&typeof ChartDataLabels<"u"?(Chart.register(ChartDataLabels),console.log("ChartDataLabels plugin registered.")):console.error("Chart.js or ChartDataLabels is not defined when trying to register ChartDataLabels plugin. Check index.html script order.");let I=null;function he(e,t){let a=new Date(e),n=new Date(t),i=0;const o=new Date(a);for(;o<=n;){const s=o.getDay();s!==0&&s!==6&&i++,o.setDate(o.getDate()+1)}return i}async function Ce(e,t,a,n){const i=D();try{if(!e)return console.error("Appwrite databases object is undefined in getHolidayLeaveDaysForMember."),m("Appwrite connection error. Please check console.",!0),0;const o=[c.equal("userId",i),c.equal("teamMember",t)];a&&o.push(c.lessThanEqual("startDate",n)),n&&o.push(c.greaterThanEqual("endDate",a));const s=await e.listDocuments(g,v.holidays,o);let l=0;const d=new Date(a),r=new Date(n);return s.documents.forEach(u=>{const f=new Date(u.startDate),T=new Date(u.endDate),M=new Date(Math.max(d.getTime(),f.getTime())),V=new Date(Math.min(r.getTime(),T.getTime()));M<=V&&(l+=he(M.toISOString().split("T")[0],V.toISOString().split("T")[0]))}),l}catch(o){return console.error(`Error fetching holiday leave days for ${t}:`,o),m(`Error fetching holiday data: ${o.message}`,!0),0}}function ke(e,t){const a=document.getElementById("utilizationChart");I&&I.destroy();const n=["#6A5ACD","#FF6347","#3CB371","#FFD700","#4682B4","#DA70D6","#8A2BE2"];I=new Chart(a,{type:"bar",data:{labels:e,datasets:[{label:"Utilization %",data:t,backgroundColor:e.map((i,o)=>n[o%n.length]),borderColor:e.map((i,o)=>n[o%n.length]),borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{title:{display:!1},legend:{display:!1},datalabels:{anchor:"end",align:"top",formatter:i=>i.toFixed(2)+"%",color:"#e0e0e0",font:{weight:"bold"}},tooltip:{callbacks:{label:function(i){let o=i.dataset.label||"";return o&&(o+=": "),i.parsed.y!==null&&(o+=i.parsed.y.toFixed(2)+"%"),o}}}},scales:{x:{grid:{color:"rgba(60, 60, 70, 0.3)",drawOnChartArea:!0},ticks:{color:"#a0a0a0",padding:5,offset:!0,font:{weight:"bold"}},position:"bottom"},y:{beginAtZero:!0,max:100,grid:{color:"rgba(60, 60, 70, 0.3)"},ticks:{color:"#a0a0a0",callback:function(i){return i+"%"},min:-.1}}},layout:{padding:{left:10,right:10,top:10,bottom:30}}}})}async function X(e){const t=document.getElementById("dataContainer"),a=document.getElementById("utilizationChartContainer");if(!t||!a){console.error("Data or chart container not found!");return}t.innerHTML='<p class="text-gray-500 text-center py-8">Loading summary data...</p>',a.classList.add("hidden");const n=document.getElementById("filterStartDate").value,i=document.getElementById("filterEndDate").value;if(!n||!i){t.innerHTML='<p class="text-gray-500 text-center py-8">Please select a Start Date and End Date to view the summary table.</p>',m("Select a date range for the summary.",!1),I&&(I.destroy(),I=null);return}const o=D(),s=[c.equal("userId",o)],l=[c.equal("userId",o)];n&&(s.push(c.greaterThanEqual("date",n)),l.push(c.lessThanEqual("startDate",i))),i&&(l.push(c.greaterThanEqual("endDate",n)),s.push(c.lessThanEqual("date",i)));try{if(!e){console.error("Appwrite databases object is undefined in displaySummaryTable (argument missing)."),m("Appwrite connection error. Please check console.",!0),t.innerHTML='<p class="text-red-500 text-center py-8">Failed to load summary data due to Appwrite connection issue.</p>';return}const r=(await e.listDocuments(g,v.timeEntries,s)).documents,u=J,f=Y;if(u.length===0){t.innerHTML='<p class="text-gray-500 text-center py-8">No team members available. Please add some in the Manage tab.</p>',I&&(I.destroy(),I=null);return}if(f.length===0){t.innerHTML='<p class="text-gray-500 text-center py-8">No activity categories available. Please add some in the Manage tab.</p>',I&&(I.destroy(),I=null);return}const T={};f.forEach(y=>{T[y.name]={total:0},u.forEach(E=>{T[y.name][E.$id]=0})}),r.forEach(y=>{const E=y.teamMember,$=y.activity,q=y.hoursSpent;T[$]&&f.some(K=>K.name===$)&&u.some(K=>K.$id===E)&&(T[$][E]+=q,T[$].total+=q)});const M={};u.forEach(y=>{M[y.$id]=0}),r.forEach(y=>{const E=y.teamMember,$=y.hoursSpent;u.some(q=>q.$id===E)&&(M[E]+=$)});const V=he(n,i),G={},w={};await Promise.all(u.map(async y=>{const E=await Ce(e,y.$id,n,i);w[y.$id]=E;const $=V-E;G[y.$id]=y.dailyHours*Math.max(0,$)}));const p=Object.values(G).reduce((y,E)=>y+E,0),h=Object.values(w).reduce((y,E)=>y+E,0);let L=`
            <table class="min-w-full bg-gray-700 rounded-md overflow-hidden text-sm summary-table">
                <thead class="bg-gray-600 text-gray-200">
                    <tr>
                        <th class="py-2 px-3 text-left sticky-col">Activities</th>
                        ${u.map(y=>`<th class="py-2 px-3 text-left">${y.name}</th>`).join("")}
                        <th class="py-2 px-3 text-left total-col">TOTAL</th>
                    </tr>
                </thead>
                <tbody class="text-gray-300">
        `;f.forEach((y,E)=>{var q;const $=E%2===0?"even-row":"odd-row";L+=`
                <tr class="border-b border-gray-600 ${$}">
                    <td class="py-2 px-3 sticky-col">${y.name}</td>
                    ${u.map(K=>{var te;return`<td class="py-2 px-3">${(((te=T[y.name])==null?void 0:te[K.$id])||0).toFixed(2)}</td>`}).join("")}
                    <td class="py-2 px-3 font-semibold total-col">${(((q=T[y.name])==null?void 0:q.total)||0).toFixed(2)}</td>
                </tr>
            `});const k=f.length;L+=`
            <tr class="border-b border-gray-600 font-bold text-gray-100 summary-total-row ${k%2===0?"even-row":"odd-row"}">
                <td class="py-2 px-3 sticky-col">Total Time Utilized (In Hrs.)</td>
                ${u.map(y=>{var E;return`<td class="py-2 px-3">${((E=M[y.$id])==null?void 0:E.toFixed(2))||"0.00"}</td>`}).join("")}
                <td class="py-2 px-3 total-col">${Object.values(M).reduce((y,E)=>y+E,0).toFixed(2)}</td>
            </tr>
            <tr class="border-b border-gray-600 font-bold text-gray-100 summary-total-row ${(k+1)%2===0?"even-row":"odd-row"}">
                <td class="py-2 px-3 sticky-col">Total Time (In Hrs.) - Holiday/Leave</td>
                ${u.map(y=>`<td class="py-2 px-3">${(G[y.$id]||0).toFixed(2)}</td>`).join("")}
                <td class="py-2 px-3 total-col">${p.toFixed(2)}</td>
            </tr>
            <tr class="font-bold text-gray-100 summary-total-row ${(k+2)%2===0?"even-row":"odd-row"}">
                <td class="py-2 px-3 sticky-col">Holiday/Leave (In Days)</td>
                ${u.map(y=>`<td class="py-2 px-3">${w[y.$id]||0}</td>`).join("")}
                <td class="py-2 px-3 total-col">${h}</td>
            </tr>
        `,L+=`
                </tbody>
            </table>
        `,t.innerHTML=L,m("Summary table loaded successfully!",!1);const A=[],H=[];let F=0,Q=0;u.forEach(y=>{const E=M[y.$id]||0,$=G[y.$id]||0;if($>0){const q=E/$*100;A.push(y.name),H.push(q)}else A.push(y.name),H.push(0);F+=E,Q+=$});let ee=0;Q>0&&(ee=F/Q*100),A.push("Team"),H.push(ee),a.classList.remove("hidden"),ke(A,H)}catch(d){m(`Error displaying summary table: ${d.message}`,!0),console.error("Error displaying summary table:",d),t.innerHTML='<p class="text-red-500 text-center py-8">Failed to load summary data.</p>',a.classList.add("hidden"),I&&(I.destroy(),I=null)}}const be="685d30a7003089fdc61a",ge="https://nyc.cloud.appwrite.io/v1";console.log("--- Appwrite Config Debug ---");console.log("Resolved APPWRITE_PROJECT_ID:",be);console.log("Resolved APPWRITE_ENDPOINT:",ge);console.log("---------------------------");document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("statusMessage");e&&(e.textContent="Connecting to Appwrite...")});const g="685d34970008292a6c80",v={teamMembers:"685d4a8d00314e8e9ce3",holidays:"685d3f0a001c6ed5cc65",timeEntries:"685d35e8001fc90f9dab",activityCategories:"685d7dd2001b35eaf00c"},ve=new N;ve.setEndpoint(ge).setProject(be);const b=new Ee(ve);console.log("Appwrite Databases object initialized:",b);let J=[],Y=[];function Ae(e){J=e}function He(e){Y=e}function D(){let e=localStorage.getItem("guestUserId");return e?console.log("Using existing guest userId:",e):(e=j.unique(),localStorage.setItem("guestUserId",e),console.log("Generated new guest userId:",e)),e}function m(e,t=!1,a="status"){if(a==="status"){const n=document.getElementById("statusMessage");n&&(n.innerHTML=`<span class="${t?"text-red-500":"text-green-500"}">${e}</span>`)}else a==="modal"&&P({title:t?"Error":"Notification",message:e,isError:t,showCancel:!1});console.log(e)}function C(e,t,a){const n=document.getElementById(e),i=document.getElementById(t),o=document.getElementById(a);n&&(n.disabled=!0),o&&o.classList.add("hidden"),i&&i.classList.remove("hidden")}function B(e,t,a){const n=document.getElementById(e),i=document.getElementById(t),o=document.getElementById(a);n&&(n.disabled=!1),o&&o.classList.remove("hidden"),i&&i.classList.add("hidden")}function P({title:e,message:t,isError:a=!1,showCancel:n=!0,onConfirm:i,onCancel:o,inputs:s=[]}){let l=document.getElementById("messageModal");l||(l=document.createElement("div"),l.id="messageModal",document.body.appendChild(l));let d=s.map(r=>r.type==="select"?`
                <div class="mb-4">
                    <label for="${r.id}" class="block text-sm font-medium text-gray-300 mb-1">${r.label}:</label>
                    <select id="${r.id}" class="p-2 rounded-md bg-gray-700 text-white w-full border border-gray-600 focus:outline-none focus:ring-2 ${a?"focus:ring-red-500":"focus:ring-blue-500"}" ${r.required?"required":""}>
                        ${r.options?r.options.map(u=>`<option value="${u.value}" ${u.value===r.value?"selected":""}>${u.text}</option>`).join(""):""}
                    </select>
                </div>
            `:r.type==="textarea"?`
                <div class="mb-4">
                    <label for="${r.id}" class="block text-sm font-medium text-gray-300 mb-1">${r.label}:</label>
                    <textarea id="${r.id}" class="p-2 rounded-md bg-gray-700 text-white w-full border border-gray-600 focus:outline-none focus:ring-2 ${a?"focus:ring-red-500":"focus:ring-blue-500"}" placeholder="${r.placeholder||""}" ${r.required?"required":""}>${r.value||""}</textarea>
                </div>
            `:r.type==="radio"?`
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-300 mb-1">${r.label}:</label>
                    <div class="flex items-center space-x-4">
                        ${r.options.map(u=>`
                            <label class="inline-flex items-center">
                                <input type="radio" name="${r.name}" value="${u.value}" class="form-radio text-indigo-500" ${u.value===r.value?"checked":""} ${r.required?"required":""}>
                                <span class="ml-2 text-gray-300">${u.label}</span>
                            </label>
                        `).join("")}
                    </div>
                </div>
            `:`
                <div class="mb-4">
                    <label for="${r.id}" class="block text-sm font-medium text-gray-300 mb-1">${r.label}:</label>
                    <input type="${r.type||"text"}" id="${r.id}" value="${r.value||""}"
                           class="p-2 rounded-md bg-gray-700 text-white w-full border border-gray-600 focus:outline-none focus:ring-2 ${a?"focus:ring-red-500":"focus:ring-blue-500"}"
                           placeholder="${r.placeholder||""}" ${r.required?"required":""}>
                </div>
            `).join("");l.className="fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50",l.innerHTML=`
        <div class="bg-gray-800 p-6 rounded-lg shadow-xl text-gray-100 w-full max-w-md">
            <h2 class="text-xl font-bold mb-4 ${a?"text-red-400":"text-blue-400"}">${e}</h2>
            <p class="mb-6">${t}</p>
            ${d}
            <div class="flex justify-end space-x-4">
                <button id="modalConfirmBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg">Confirm</button>
                ${n?'<button id="modalCancelBtn" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-lg">Cancel</button>':""}
            </div>
        </div>
    `,document.getElementById("modalConfirmBtn").onclick=()=>{l.classList.add("hidden"),i&&i()},n&&(document.getElementById("modalCancelBtn").onclick=()=>{l.classList.add("hidden"),o&&o()}),l.classList.remove("hidden")}async function qe(e,t,a,n,i,o){C("logEffortBtn","logEffortSpinner","logEffortBtnText");const s=D();try{const l=await b.createDocument(g,v.timeEntries,j.unique(),{userId:s,teamMember:e,activity:t,ticketNumber:a,hoursSpent:n,date:i,notes:o},[S.read(z.user(s)),S.write(z.user(s))]);m(`Time logged successfully! Document ID: ${l.$id}`,!1,"modal"),console.log("Logged Time Entry:",l),document.getElementById("timeTrackForm").reset(),document.getElementById("tableViewBtn").classList.contains("bg-indigo-700")&&await U()}catch(l){m(`Error logging time: ${l.message}`,!0,"modal"),console.error("Error logging time:",l)}finally{B("logEffortBtn","logEffortSpinner","logEffortBtnText")}}async function U(){const e=document.getElementById("dataContainer");if(!e){console.error("Data container not found!");return}e.innerHTML='<p class="text-gray-500 text-center py-8">Loading time entries...</p>';const t=document.getElementById("filterStartDate").value,a=document.getElementById("filterEndDate").value,n=document.getElementById("filterTeamMember").value,i=document.getElementById("filterActivity").value,o=[],s=D();o.push(c.equal("userId",s)),t&&o.push(c.greaterThanEqual("date",t)),a&&o.push(c.lessThanEqual("date",a)),n&&o.push(c.equal("teamMember",n)),i&&o.push(c.equal("activity",i)),o.push(c.orderDesc("date"));try{const l=await b.listDocuments(g,v.timeEntries,o);if(l.documents.length===0){e.innerHTML='<p class="text-gray-500 text-center py-8">No time entries found for the selected filters.</p>',m("No time entries found for filters.",!1);return}let d=`
            <table class="min-w-full bg-gray-700 rounded-md overflow-hidden text-sm">
                <thead class="bg-gray-600 text-gray-200">
                    <tr>
                        <th class="py-2 px-3 text-left">Date</th>
                        <th class="py-2 px-3 text-left">Member</th>
                        <th class="py-2 px-3 text-left">Activity</th>
                        <th class="py-2 px-3 text-left">Hours</th>
                        <th class="py-2 px-3 text-left">Ticket</th>
                        <th class="py-2 px-3 text-left">Notes</th>
                        <th class="py-2 px-3 text-left">Actions</th>
                    </tr>
                </thead>
                <tbody class="text-gray-300">
        `;l.documents.forEach(r=>{var f;const u=((f=J.find(T=>T.$id===r.teamMember))==null?void 0:f.name)||"Unknown";d+=`
                <tr class="border-b border-gray-600 last:border-0">
                    <td class="py-2 px-3">${r.date}</td>
                    <td class="py-2 px-3">${u}</td>
                    <td class="py-2 px-3">${r.activity}</td>
                    <td class="py-2 px-3">${r.hoursSpent.toFixed(2)}</td>
                    <td class="py-2 px-3">${r.ticketNumber||"N/A"}</td>
                    <td class="py-2 px-3">${r.notes||"N/A"}</td>
                    <td class="py-2 px-3 flex flex-col sm:flex-row gap-1">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-time-entry-btn"
                                data-id="${r.$id}"
                                data-date="${r.date}"
                                data-team-member="${r.teamMember}"
                                data-activity="${r.activity}"
                                data-ticket-number="${r.ticketNumber||""}"
                                data-hours-spent="${r.hoursSpent}"
                                data-notes="${r.notes?r.notes.replace(/"/g,"&quot;"):""}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-time-entry-btn"
                                data-id="${r.$id}">Delete</button>
                    </td>
                </tr>
            `}),d+=`
                </tbody>
            </table>
        `,e.innerHTML=d,m(`Displayed ${l.documents.length} time entries.`,!1)}catch(l){m(`Error displaying time entries: ${l.message}`,!0),console.error("Error displaying time entries:",l),e.innerHTML='<p class="text-red-500 text-center py-8">Failed to load time entries.</p>'}}function Ne(e,t,a,n,i,o,s){P({title:"Update Time Entry",message:"Update details for this time entry:",inputs:[{id:"modalTimeEntryDate",label:"Date",type:"date",value:t,required:!0},{id:"modalTimeEntryTeamMember",label:"Team Member",type:"select",value:a,options:J.map(l=>({value:l.$id,text:l.name})),required:!0},{id:"modalTimeEntryActivity",label:"Activity",type:"select",value:n,options:Y.map(l=>({value:l.name,text:l.name})),required:!0},{id:"modalTimeEntryTicket",label:"Ticket Number",type:"text",value:i||"",placeholder:"e.g., SUP-12345"},{id:"modalTimeEntryHours",label:"Duration (hours)",type:"number",value:o,step:"0.01",min:"0",required:!0},{id:"modalTimeEntryNotes",label:"Notes",type:"textarea",value:s||"",placeholder:"Add any relevant notes..."}],onConfirm:async()=>{const l=document.getElementById("modalTimeEntryDate").value,d=document.getElementById("modalTimeEntryTeamMember").value,r=document.getElementById("modalTimeEntryActivity").value,u=document.getElementById("modalTimeEntryTicket").value,f=parseFloat(document.getElementById("modalTimeEntryHours").value),T=document.getElementById("modalTimeEntryNotes").value;d&&r&&!isNaN(f)&&f>0&&l?await je(e,d,r,u,f,l,T):m("Please ensure all required fields are valid.",!0,"modal")},onCancel:()=>m("Time entry update cancelled.",!1)})}async function je(e,t,a,n,i,o,s){const l=D();try{await b.updateDocument(g,v.timeEntries,e,{userId:l,teamMember:t,activity:a,ticketNumber:n,hoursSpent:i,date:o,notes:s}),m(`Time entry with ID ${e} updated successfully!`,!1,"modal"),await U()}catch(d){m(`Error updating time entry ${e}: ${d.message}`,!0,"modal"),console.error("Error updating time entry:",d)}}async function Re(e){P({title:"Confirm Deletion",message:`Are you sure you want to delete this time entry (ID: ${e})? This action cannot be undone.`,isError:!0,showCancel:!0,onConfirm:async()=>{try{await b.deleteDocument(g,v.timeEntries,e),m(`Time entry with ID ${e} deleted successfully!`,!1,"modal"),await U()}catch(t){m(`Error deleting time entry ${e}: ${t.message}`,!0,"modal"),console.error("Error deleting time entry:",t)}},onCancel:()=>m("Deletion cancelled.",!1)})}async function Ue(){C("deleteAllTimeEntriesBtn","deleteAllTimeEntriesSpinner","deleteAllTimeEntriesBtnText");const e=D();try{const t=await b.listDocuments(g,v.timeEntries,[c.equal("userId",e),c.limit(100)]);if(t.documents.length===0){m("No time entries to delete.",!1,"modal");return}for(const a of t.documents)await b.deleteDocument(g,v.timeEntries,a.$id);m(`Successfully deleted ${t.documents.length} time entries.`,!1,"modal"),await U()}catch(t){m(`Error deleting all time entries: ${t.message}`,!0,"modal"),console.error("Error deleting all time entries:",t)}finally{B("deleteAllTimeEntriesBtn","deleteAllTimeEntriesSpinner","deleteAllTimeEntriesBtnText")}}function Z(e){const t=document.getElementById("filterTeamMemberWrapper"),a=document.getElementById("filterActivityWrapper"),n=document.getElementById("filterHolidayTypeWrapper"),i=document.getElementById("copyButtonsContainer"),o=document.getElementById("copyGraphButtonWrapper");document.getElementById("filterControls").classList.add("hidden"),document.getElementById("dataContainer").classList.add("hidden"),document.getElementById("manageTeamMembersSection").classList.add("hidden"),document.getElementById("utilizationChartContainer").classList.add("hidden");const s=document.getElementById("activityCategoryManagement");s&&s.classList.add("hidden"),t&&t.classList.add("hidden"),a&&a.classList.add("hidden"),n&&n.classList.add("hidden"),i&&i.classList.add("hidden"),o&&o.classList.add("hidden"),["tableViewBtn","chartsViewBtn","holidaysViewBtn","manageViewBtn"].forEach(r=>{const u=document.getElementById(r);u&&(u.classList.remove("bg-indigo-700","text-white"),u.classList.add("bg-gray-700","hover:bg-gray-600"))});const d=document.getElementById(`${e}ViewBtn`);switch(d&&(d.classList.remove("bg-gray-700","hover:bg-gray-600"),d.classList.add("bg-indigo-700","text-white")),e){case"table":document.getElementById("filterControls").classList.add("hidden"),document.getElementById("dataContainer").classList.remove("hidden"),t&&t.classList.remove("hidden"),a&&a.classList.remove("hidden"),i&&i.classList.remove("hidden"),U();break;case"charts":document.getElementById("filterControls").classList.remove("hidden"),document.getElementById("dataContainer").classList.add("hidden"),document.getElementById("utilizationChartContainer").classList.remove("hidden"),i&&i.classList.remove("hidden"),o&&o.classList.remove("hidden"),X(b);break;case"holidays":document.getElementById("filterControls").classList.remove("hidden"),document.getElementById("dataContainer").classList.remove("hidden"),t&&t.classList.remove("hidden"),n&&n.classList.remove("hidden"),i&&i.classList.remove("hidden"),O();break;case"manage":document.getElementById("filterControls").classList.add("hidden"),document.getElementById("dataContainer").classList.add("hidden"),document.getElementById("manageTeamMembersSection").classList.remove("hidden"),W(),_();const r=document.getElementById("activityCategoryManagement");r&&r.classList.remove("hidden");break}}async function O(){const e=document.getElementById("dataContainer");if(!e){console.error("Data container not found!");return}e.innerHTML='<p class="text-gray-500 text-center py-8">Loading holiday records...</p>';const t=document.getElementById("filterStartDate").value,a=document.getElementById("filterEndDate").value,n=document.getElementById("filterTeamMember").value,i=document.getElementById("filterHolidayType").value,o=[],s=D();o.push(c.equal("userId",s)),t&&o.push(c.lessThanEqual("startDate",a)),a&&o.push(c.greaterThanEqual("endDate",t)),n&&o.push(c.equal("teamMember",n)),i&&o.push(c.equal("holidayType",i)),o.push(c.orderDesc("startDate"));try{const l=await b.listDocuments(g,v.holidays,o);if(l.documents.length===0){e.innerHTML='<p class="text-gray-500 text-center py-8">No holiday/leave records found for the selected filters.</p>',m("No holiday/leave records found for filters.",!1);return}let d=`
            <table class="min-w-full bg-gray-700 rounded-md overflow-hidden text-sm">
                <thead class="bg-gray-600 text-gray-200">
                    <tr>
                        <th class="py-2 px-3 text-left">Member</th>
                        <th class="py-2 px-3 text-left">Start Date</th>
                        <th class="py-2 px-3 text-left">End Date</th>
                        <th class="py-2 px-3 text-left">Type</th>
                        <th class="py-2 px-3 text-left">Reason</th>
                        <th class="py-2 px-3 text-left">Actions</th>
                    </tr>
                </thead>
                <tbody class="text-gray-300">
        `;l.documents.forEach(r=>{var f;const u=((f=J.find(T=>T.$id===r.teamMember))==null?void 0:f.name)||"Unknown";d+=`
                <tr class="border-b border-gray-600 last:border-0">
                    <td class="py-2 px-3">${u}</td>
                    <td class="py-2 px-3">${r.startDate}</td>
                    <td class="py-2 px-3">${r.endDate}</td>
                    <td class="py-2 px-3">${r.holidayType||"Undefined"}</td> 
                    <td class="py-2 px-3">${r.reason||"N/A"}</td>
                    <td class="py-2 px-3 flex flex-col sm:flex-row gap-1">
                        <button class="bg-yellow-500 hover:bg-yellow-600 text-white text-xs font-bold py-1 px-2 rounded-lg edit-holiday-btn"
                                data-id="${r.$id}"
                                data-team-member="${r.teamMember}"
                                data-start-date="${r.startDate}"
                                data-end-date="${r.endDate}"
                                data-type="${r.holidayType||""}"
                                data-reason="${r.reason?r.reason.replace(/"/g,"&quot;"):""}">Edit</button>
                        <button class="bg-red-500 hover:bg-red-600 text-white text-xs font-bold py-1 px-2 rounded-lg delete-holiday-btn"
                                data-id="${r.$id}">Delete</button>
                    </td>
                </tr>
            `}),d+=`
                </tbody>
            </table>
        `,e.innerHTML=d,m(`Displayed ${l.documents.length} holiday records.`,!1)}catch(l){m(`Error displaying holiday records: ${l.message}`,!0),console.error("Error displaying holiday records:",l),e.innerHTML='<p class="text-red-500 text-center py-8">Failed to load holiday records.</p>'}}async function ze(e,t,a,n,i){C("markHolidayBtn","markHolidaySpinner","markHolidayBtnText");const o=D();try{if(!n){m("Error: Holiday type is required.",!0,"modal"),B("markHolidayBtn","markHolidaySpinner","markHolidayBtnText");return}const s=await b.createDocument(g,v.holidays,j.unique(),{userId:o,teamMember:e,startDate:t,endDate:a,holidayType:n,reason:i},[S.read(z.user(o)),S.write(z.user(o))]);m(`Holiday/Leave recorded successfully! Document ID: ${s.$id}`,!1,"modal"),console.log("Recorded Holiday/Leave:",s),document.getElementById("holidayForm").reset(),document.getElementById("holidaysViewBtn").classList.contains("bg-indigo-700")&&await O()}catch(s){m(`Error recording holiday/leave: ${s.message}`,!0,"modal"),console.error("Error recording holiday/leave:",s)}finally{B("markHolidayBtn","markHolidaySpinner","markHolidayBtnText")}}function Pe(e,t,a,n,i,o){P({title:"Update Holiday/Leave",message:"Update details for this holiday/leave record:",inputs:[{id:"modalHolidayTeamMember",label:"Team Member",type:"select",value:t,options:J.map(s=>({value:s.$id,text:s.name})),required:!0},{id:"modalHolidayStartDate",label:"Start Date",type:"date",value:a,required:!0},{id:"modalHolidayEndDate",label:"End Date",type:"date",value:n,required:!0},{id:"modalHolidayType",label:"Type",type:"radio",name:"modalHolidayTypeRadio",value:i,options:[{value:"Holiday",label:"Holiday"},{value:"Leave",label:"Leave"}],required:!0},{id:"modalHolidayReason",label:"Reason",type:"textarea",value:o||"",placeholder:"e.g., Annual vacation",required:!0}],onConfirm:async()=>{var f;const s=document.getElementById("modalHolidayTeamMember").value,l=document.getElementById("modalHolidayStartDate").value,d=document.getElementById("modalHolidayEndDate").value,r=(f=document.querySelector('input[name="modalHolidayTypeRadio"]:checked'))==null?void 0:f.value,u=document.getElementById("modalHolidayReason").value;s&&l&&d&&r&&u?await Ve(e,s,l,d,r,u):m("Please ensure all required fields are valid.",!0,"modal")},onCancel:()=>m("Holiday/Leave update cancelled.",!1)})}async function Ve(e,t,a,n,i,o){const s=D();try{await b.updateDocument(g,v.holidays,e,{userId:s,teamMember:t,startDate:a,endDate:n,holidayType:i,reason:o}),m(`Holiday/Leave record with ID ${e} updated successfully!`,!1,"modal"),await O()}catch(l){m(`Error updating holiday/leave record ${e}: ${l.message}`,!0,"modal"),console.error("Error updating holiday/leave record:",l)}}async function Ge(){C("deleteAllHolidayRecordsBtn","deleteAllHolidayRecordsSpinner","deleteAllHolidayRecordsBtnText");const e=D();try{const t=await b.listDocuments(g,v.holidays,[c.equal("userId",e),c.limit(100)]);if(t.documents.length===0){m("No holiday records to delete.",!1,"modal");return}for(const a of t.documents)await b.deleteDocument(g,v.holidays,a.$id);m(`Successfully deleted ${t.documents.length} holiday records.`,!1,"modal"),await O()}catch(t){m(`Error deleting all holiday records: ${t.message}`,!0,"modal"),console.error("Error deleting all holiday records:",t)}finally{B("deleteAllHolidayRecordsBtn","deleteAllHolidayRecordsSpinner","deleteAllHolidayRecordsBtnText")}}document.addEventListener("DOMContentLoaded",async()=>{var d,r,u,f,T,M,V,G;const e=document.getElementById("dataContainer");e&&e.addEventListener("click",w=>{const p=w.target;if(p.classList.contains("edit-time-entry-btn")){const h=p.dataset;Ne(h.id,h.date,h.teamMember,h.activity,h.ticketNumber,parseFloat(h.hoursSpent),h.notes)}else if(p.classList.contains("delete-time-entry-btn")){const h=p.dataset.id;Re(h)}else if(p.classList.contains("edit-holiday-btn")){const h=p.dataset;Pe(h.id,h.teamMember,h.startDate,h.endDate,h.type,h.reason)}else if(p.classList.contains("delete-holiday-btn")){const h=p.dataset.id;deleteHoliday(h)}});const t=document.getElementById("timeTrackForm");t&&t.addEventListener("submit",w=>{w.preventDefault();const p=document.getElementById("teamMemberTime").value,h=document.getElementById("activity").value,L=document.getElementById("ticketNumber").value,k=parseFloat(document.getElementById("hoursSpent").value),A=document.getElementById("trackDate").value,H=document.getElementById("notes").value;p&&h&&!isNaN(k)&&k>0&&A?qe(p,h,L,k,A,H):m("Please fill all required fields for time log.",!0,"modal")});const a=document.getElementById("holidayForm");a&&a.addEventListener("submit",w=>{w.preventDefault();const p=document.getElementById("teamMemberHoliday").value,h=document.getElementById("holidayStartDate").value,L=document.getElementById("holidayEndDate").value,k=document.querySelector('input[name="holidayType"]:checked'),A=k?k.value:"",H=document.getElementById("holidayReason").value;p&&h&&L&&A&&H?ze(p,h,L,A,H):m("Please fill all required fields for holiday/leave, including selecting a type.",!0,"modal")});const n=document.getElementById("addTeamMemberForm");n&&n.addEventListener("submit",async w=>{w.preventDefault();const p=document.getElementById("newTeamMemberName").value,h=parseFloat(document.getElementById("newTeamMemberHours").value),L=D();p&&!isNaN(h)&&h>=0?await Te(p,h,L):m("Please enter valid name and daily work hours.",!0,"modal")});const i=document.getElementById("addActivityCategoryForm");i&&i.addEventListener("submit",async w=>{w.preventDefault();const p=document.getElementById("newActivityCategoryName").value,h=D();p?await $e(p,h):m("Please enter an activity category name.",!0,"modal")});const o=document.getElementById("applyFiltersBtn");o&&o.addEventListener("click",()=>{var p;const w=(p=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:p.id;w==="tableViewBtn"?U():w==="holidaysViewBtn"?O():w==="chartsViewBtn"&&X(b)});const s=document.getElementById("resetFiltersBtn");s&&s.addEventListener("click",()=>{var p;document.getElementById("filterStartDate").value="",document.getElementById("filterEndDate").value="",document.getElementById("filterTeamMember").value="",document.getElementById("filterActivity").value="",document.getElementById("filterHolidayType").value="";const w=(p=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:p.id;w==="tableViewBtn"?U():w==="holidaysViewBtn"?O():w==="chartsViewBtn"&&X(b)});const l=document.getElementById("refreshDataBtn");l&&l.addEventListener("click",async()=>{var w;C("refreshDataBtn","refreshDataSpinner","refreshDataBtnText");try{const p=(w=document.querySelector(".flex.justify-center.space-x-2.mb-6.text-xs.text-gray-400 button.bg-indigo-700"))==null?void 0:w.id;p==="tableViewBtn"?await U():p==="holidaysViewBtn"?await O():p==="chartsViewBtn"?await X(b):p==="manageViewBtn"&&(await W(),await _()),m("Data refreshed successfully!",!1)}catch(p){m(`Error refreshing data: ${p.message}`,!0),console.error("Refresh error:",p)}finally{B("refreshDataBtn","refreshDataSpinner","refreshDataBtnText")}}),(d=document.getElementById("tableViewBtn"))==null||d.addEventListener("click",()=>Z("table")),(r=document.getElementById("chartsViewBtn"))==null||r.addEventListener("click",()=>Z("charts")),(u=document.getElementById("holidaysViewBtn"))==null||u.addEventListener("click",()=>Z("holidays")),(f=document.getElementById("manageViewBtn"))==null||f.addEventListener("click",()=>Z("manage")),(T=document.getElementById("deleteAllTimeEntriesBtn"))==null||T.addEventListener("click",Ue),(M=document.getElementById("deleteAllHolidayRecordsBtn"))==null||M.addEventListener("click",Ge),(V=document.getElementById("deleteAllTeamMembersBtn"))==null||V.addEventListener("click",Ie),(G=document.getElementById("deleteAllActivityCategoriesBtn"))==null||G.addEventListener("click",Le),D(),await W(),await _(),Z("table")});function Oe(e){const t=e.split(","),a=t[0].match(/:(.*?);/)[1],n=atob(t[1]);let i=n.length;const o=new Uint8Array(i);for(;i--;)o[i]=n.charCodeAt(i);return new Blob([o],{type:a})}async function We(e,t,a,n){C(t,n,a);const i=document.getElementById(e);if(!i){m(`Error: Element with ID '${e}' not found for copying.`,!0,"modal"),B(t,n,a);return}try{(await html2canvas(i,{scale:2,backgroundColor:"#1a1a1c",useCORS:!0})).toBlob(async s=>{if(!s){m("Failed to create image blob from canvas.",!0,"modal"),B(t,n,a);return}if(navigator.clipboard&&navigator.clipboard.write){const l=new ClipboardItem({"image/png":s});try{await navigator.clipboard.write([l]),m("Table image copied to clipboard!",!1,"modal"),console.log("Table image copied to clipboard!")}catch(d){m(`Failed to copy table image to clipboard: ${d.message}`,!0,"modal"),console.error("Failed to copy table image:",d)}}else m("Clipboard API not supported or restricted by browser. Please try manually copying.",!0,"modal"),console.warn("Clipboard API not supported or restricted.");B(t,n,a)},"image/png")}catch(o){m(`Error rendering element to image: ${o.message}`,!0,"modal"),console.error("Error rendering HTML element to image:",o),B(t,n,a)}}async function _e(e,t,a,n){C(t,n,a);const i=document.getElementById(e);if(!i||!(i instanceof HTMLCanvasElement)){m(`Error: Canvas element with ID '${e}' not found or is not a canvas.`,!0,"modal"),B(t,n,a);return}try{const o=i.toDataURL("image/png",1),s=Oe(o);if(navigator.clipboard&&navigator.clipboard.write){const l=new ClipboardItem({"image/png":s});try{await navigator.clipboard.write([l]),m("Graph image copied to clipboard!",!1,"modal"),console.log("Graph image copied to clipboard!")}catch(d){m(`Failed to copy graph image to clipboard: ${d.message}`,!0,"modal"),console.error("Failed to copy graph image:",d)}}else m("Clipboard API not supported or restricted by browser. Please try manually copying.",!0,"modal"),console.warn("Clipboard API not supported or restricted.")}catch(o){m(`Error copying chart image: ${o.message}`,!0,"modal"),console.error("Error copying chart image:",o)}finally{B(t,n,a)}}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("copyTableBtn"),t=document.getElementById("copyChartBtn");e?e.addEventListener("click",()=>{We("dataContainer","copyTableBtn","copyTableBtnText","copyTableSpinner")}):console.warn("Copy Table button not found."),t?t.addEventListener("click",()=>{_e("utilizationChart","copyChartBtn","copyChartBtnText","copyChartSpinner")}):console.warn("Copy Chart button not found.")});
